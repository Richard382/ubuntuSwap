{"version":3,"sources":["components/HashRoute.tsx","views/Nft/market/Collection/OnSale.tsx","views/Nft/market/Collection/index.tsx","components/Select/Select.tsx","components/AddressInputSelect/index.tsx","views/Nft/market/components/MarketPageHeader.tsx","views/Nft/market/components/BannerHeader/AvatarImage.tsx","views/Nft/market/components/StatBox.tsx","views/Nft/market/components/SearchBar.tsx","views/Nft/market/components/MarketPageTitle.tsx","views/Nft/market/components/BaseSubMenu.tsx","views/Nft/market/Collection/config.ts","views/Nft/market/Collection/TopBar.tsx","views/Nft/market/Collection/LowestPriceStatBoxItem.tsx","views/Nft/market/Collection/Header.tsx","views/Nft/market/components/BannerHeader/BannerImage.tsx","views/Nft/market/components/BannerHeader/index.tsx"],"names":["HashRoute","Component","component","hash","routeProps","location","props","React","memo","OnSale","collectionAddress","useParams","useState","nfts","setNfts","orderDirection","orderBy","queryParams","setQueryParams","isFetching","setIsFetching","skip","setSkip","t","useTranslation","collection","useGetCollection","numberTokensListed","sortByItems","label","value","useEffect","fetchApiData","marketData","a","apiRequestPromises","map","marketNft","getNftApi","tokenId","Promise","all","apiResponses","responsesWithMarketData","apiNft","i","collectionName","name","prevState","combinedNfts","uniqBy","fetchMarketData","getNftsMarketData","toLowerCase","isTradable","REQUEST_SIZE","subgraphRes","Header","Page","position","alignItems","justifyContent","mb","minWidth","fontSize","textTransform","color","fontWeight","Select","options","onOptionChange","event","length","gridGap","gridTemplateColumns","nft","currentAskPriceAsNumber","parseFloat","currentAskPrice","undefined","GridPlaceholder","mt","Number","onClick","scale","endIcon","spin","Items","lazy","Traits","IndividualNFTPageRouter","Collection","path","useRouteMatch","isPBCollection","pancakeBunniesAddress","useFetchCollection","exact","PageLoader","DropDownHeader","styled","div","theme","shadows","inset","colors","inputSecondary","input","DropDownListContainer","zIndices","dropdown","mediaQueries","sm","DropDownContainer","Box","isOpen","css","tooltip","boxShadow","DropDownList","ul","ListItem","li","dropdownRef","useRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","stopPropagation","handleClickOutside","document","addEventListener","removeEventListener","ref","option","index","selectedIndex","ResultStatus","SubMenu","radii","default","AddressLink","Text","initialState","resultFound","NOT_VALID","defaultValidAddressHandler","resolve","AddressInputSelect","onValidAddress","onAddressClick","state","setState","isAddress","hasResults","FOUND","NOT_FOUND","validAddressHandler","placeholder","subject","onChange","evt","newValue","target","style","zIndex","paddingRight","top","right","px","MarketPageHeader","background","useTheme","isDark","AvatarImage","attrs","alt","src","borderColor","StatBoxItem","title","stat","textAlign","height","width","mx","StatBox","Flex","invertedContrast","cardBorder","card","SearchBar","history","useHistory","push","nftsBaseUrl","MarketPageTitle","description","children","as","BaseSubMenu","SubMenuItems","BackLink","RouterLink","primary","TopBar","to","LowestPriceStatBoxItem","lowestPrice","setLowestPrice","getLowestPriceInCollection","lowestCollectionPrice","fetchLowestPrice","formattedLowestPrice","toLocaleString","minimumFractionDigits","maximumFractionDigits","symbol","totalSupply","totalVolumeBNB","banner","avatar","useLocation","pathname","DEFAULT_TABS","volume","onSaleEntry","href","itemsConfig","BannerHeader","bannerImage","large","formatNumber","address","Container","items","activeItem","StyledBannerImage","md","bannerAlt","flexDirection","pb","BannerImage","bottom","left"],"mappings":"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","file":"static/js/16.00df2b45.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Route } from 'react-router'\r\n\r\nconst HashRoute = ({ component: Component, hash, ...routeProps }) => (\r\n  <Route {...routeProps} component={({ location, ...props }) => location.hash === hash && <Component {...props} />} />\r\n)\r\n\r\nexport default React.memo(HashRoute)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { Box, Flex, Grid, Text, Button, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { uniqBy } from 'lodash'\r\nimport { NftToken, TokenMarketData } from 'state/nftMarket/types'\r\nimport { useGetCollection } from 'state/nftMarket/hooks'\r\nimport { getNftApi, getNftsMarketData } from 'state/nftMarket/helpers'\r\nimport Page from 'components/Layout/Page'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport Header from './Header'\r\nimport GridPlaceholder from '../components/GridPlaceholder'\r\nimport { CollectibleLinkCard } from '../components/CollectibleCard'\r\nimport { REQUEST_SIZE } from './config'\r\n\r\ninterface QueryParams {\r\n  orderDirection: 'asc' | 'desc'\r\n  orderBy: 'currentAskPrice' | 'updatedAt'\r\n}\r\n\r\nconst OnSale = () => {\r\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\r\n  const [nfts, setNfts] = useState<NftToken[]>([])\r\n  const [queryParams, setQueryParams] = useState<QueryParams>({ orderDirection: 'asc', orderBy: 'currentAskPrice' })\r\n  const [isFetching, setIsFetching] = useState(false)\r\n  const [skip, setSkip] = useState(0)\r\n  const { t } = useTranslation()\r\n  const collection = useGetCollection(collectionAddress)\r\n  const { numberTokensListed } = collection\r\n\r\n  const sortByItems = [\r\n    { label: t('Lowest price'), value: { orderDirection: 'asc', orderBy: 'currentAskPrice' } },\r\n    { label: t('Highest price'), value: { orderDirection: 'desc', orderBy: 'currentAskPrice' } },\r\n    { label: t('Recently listed'), value: { orderDirection: 'desc', orderBy: 'updatedAt' } },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    const fetchApiData = async (marketData: TokenMarketData[]) => {\r\n      const apiRequestPromises = marketData.map((marketNft) => getNftApi(collectionAddress, marketNft.tokenId))\r\n      const apiResponses = await Promise.all(apiRequestPromises)\r\n      const responsesWithMarketData = apiResponses.map((apiNft, i) => {\r\n        return {\r\n          ...apiNft,\r\n          collectionAddress,\r\n          collectionName: apiNft.collection.name,\r\n          marketData: marketData[i],\r\n        }\r\n      })\r\n      setIsFetching(false)\r\n      setNfts((prevState) => {\r\n        const combinedNfts = [...prevState, ...responsesWithMarketData]\r\n        return uniqBy(combinedNfts, 'tokenId')\r\n      })\r\n    }\r\n\r\n    const fetchMarketData = async () => {\r\n      const subgraphRes = await getNftsMarketData(\r\n        { collection: collectionAddress.toLowerCase(), isTradable: true },\r\n        REQUEST_SIZE,\r\n        queryParams.orderBy,\r\n        queryParams.orderDirection,\r\n        skip,\r\n      )\r\n      fetchApiData(subgraphRes)\r\n    }\r\n\r\n    setIsFetching(true)\r\n    fetchMarketData()\r\n  }, [collectionAddress, queryParams, skip])\r\n\r\n  const handleChange = (event: OptionProps) => {\r\n    setNfts([])\r\n    const { value } = event\r\n    setQueryParams({ orderDirection: value.orderDirection, orderBy: value.orderBy })\r\n  }\r\n\r\n  const handleLoadMore = () => {\r\n    setSkip(skip + REQUEST_SIZE)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header collection={collection} />\r\n      <Page>\r\n        <Box position=\"relative\">\r\n          <Flex alignItems=\"center\" justifyContent={['flex-start', null, null, 'flex-end']} mb=\"24px\">\r\n            <Box minWidth=\"165px\">\r\n              <Text fontSize=\"12px\" textTransform=\"uppercase\" color=\"textSubtle\" fontWeight={600} mb=\"4px\">\r\n                {t('Sort By')}\r\n              </Text>\r\n              <Select options={sortByItems} onOptionChange={handleChange} />\r\n            </Box>\r\n          </Flex>\r\n          {!nfts.length ? (\r\n            <GridPlaceholder />\r\n          ) : (\r\n            <>\r\n              <Grid\r\n                gridGap=\"16px\"\r\n                gridTemplateColumns={['1fr', null, 'repeat(3, 1fr)', null, 'repeat(4, 1fr)']}\r\n                alignItems=\"start\"\r\n              >\r\n                {nfts.map((nft) => {\r\n                  const currentAskPriceAsNumber = nft.marketData && parseFloat(nft.marketData.currentAskPrice)\r\n\r\n                  return (\r\n                    <CollectibleLinkCard\r\n                      key={`${nft.tokenId}-${nft.collectionName}`}\r\n                      nft={nft}\r\n                      currentAskPrice={currentAskPriceAsNumber > 0 ? currentAskPriceAsNumber : undefined}\r\n                    />\r\n                  )\r\n                })}\r\n              </Grid>\r\n            </>\r\n          )}\r\n\r\n          <Flex mt=\"60px\" mb=\"12px\" justifyContent=\"center\">\r\n            {Number(numberTokensListed) > nfts?.length && (\r\n              <Button\r\n                onClick={handleLoadMore}\r\n                scale=\"sm\"\r\n                endIcon={isFetching ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\r\n              >\r\n                {isFetching ? t('Loading') : t('Load more')}\r\n              </Button>\r\n            )}\r\n          </Flex>\r\n        </Box>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OnSale\r\n","import HashRoute from 'components/HashRoute'\r\nimport PageLoader from 'components/Loader/PageLoader'\r\nimport React, { lazy } from 'react'\r\nimport { Route, useParams, useRouteMatch } from 'react-router'\r\nimport { useFetchCollection, useGetCollection } from 'state/nftMarket/hooks'\r\nimport { pancakeBunniesAddress } from '../constants'\r\nimport OnSale from './OnSale'\r\n\r\nconst Items = lazy(() => import('./Items'))\r\nconst Traits = lazy(() => import('./Traits'))\r\nconst IndividualNFTPageRouter = lazy(() => import('./IndividualNFTPage'))\r\n\r\nconst Collection = () => {\r\n  const { path } = useRouteMatch()\r\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\r\n  const collection = useGetCollection(collectionAddress)\r\n  const isPBCollection = collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\r\n\r\n  useFetchCollection(collectionAddress)\r\n\r\n  if (!collection) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HashRoute exact path={path} hash=\"\" component={isPBCollection ? Items : OnSale} />\r\n      <HashRoute exact path={path} hash=\"#items\" component={Items} />\r\n      <HashRoute exact path={path} hash=\"#onsale\" component={OnSale} />\r\n      <HashRoute exact path={path} hash=\"#traits\" component={Traits} />\r\n      <Route path={`${path}/:tokenId`}>\r\n        <IndividualNFTPageRouter />\r\n      </Route>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Collection\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\r\n\r\nconst DropDownHeader = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n  border-radius: 16px;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  transition: border-radius 0.15s;\r\n`\r\n\r\nconst DropDownListContainer = styled.div`\r\n  min-width: 136px;\r\n  height: 0;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  opacity: 0;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n`\r\n\r\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\r\n  cursor: pointer;\r\n  width: 100%;\r\n  position: relative;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  height: 40px;\r\n  min-width: 136px;\r\n  user-select: none;\r\n  z-index: 20;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isOpen &&\r\n    css`\r\n      ${DropDownHeader} {\r\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n        border-radius: 16px 16px 0 0;\r\n      }\r\n\r\n      ${DropDownListContainer} {\r\n        height: auto;\r\n        transform: scaleY(1);\r\n        opacity: 1;\r\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        border-top-width: 0;\r\n        border-radius: 0 0 16px 16px;\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n      }\r\n    `}\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst DropDownList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n`\r\n\r\nconst ListItem = styled.li`\r\n  list-style: none;\r\n  padding: 8px 16px;\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.inputSecondary};\r\n  }\r\n`\r\n\r\nexport interface SelectProps extends BoxProps {\r\n  options: OptionProps[]\r\n  onOptionChange?: (option: OptionProps) => void\r\n}\r\n\r\nexport interface OptionProps {\r\n  label: string\r\n  value: any\r\n}\r\n\r\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onOptionChange, ...props }) => {\r\n  const dropdownRef = useRef(null)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\r\n\r\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    setIsOpen(!isOpen)\r\n    event.stopPropagation()\r\n  }\r\n\r\n  const onOptionClicked = (selectedIndex: number) => () => {\r\n    setSelectedOptionIndex(selectedIndex)\r\n    setIsOpen(false)\r\n\r\n    if (onOptionChange) {\r\n      onOptionChange(options[selectedIndex])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = () => {\r\n      setIsOpen(false)\r\n    }\r\n\r\n    document.addEventListener('click', handleClickOutside)\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <DropDownContainer isOpen={isOpen} {...props}>\r\n      <DropDownHeader onClick={toggling}>\r\n        <Text>{options[selectedOptionIndex].label}</Text>\r\n      </DropDownHeader>\r\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\r\n      <DropDownListContainer>\r\n        <DropDownList ref={dropdownRef}>\r\n          {options.map((option, index) =>\r\n            index !== selectedOptionIndex ? (\r\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\r\n                <Text>{option.label}</Text>\r\n              </ListItem>\r\n            ) : null,\r\n          )}\r\n        </DropDownList>\r\n      </DropDownListContainer>\r\n    </DropDownContainer>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import React, { ChangeEvent, useState, useEffect } from 'react'\r\nimport { Box, BoxProps, Text, Input } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { isAddress } from 'utils'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CircleLoader from 'components/Loader/CircleLoader'\r\n\r\nenum ResultStatus {\r\n  NOT_VALID,\r\n  FOUND,\r\n  NOT_FOUND,\r\n}\r\n\r\ninterface AddressInputSelectProps extends BoxProps {\r\n  onValidAddress?: (value: string) => Promise<boolean>\r\n  onAddressClick: (value: string) => void\r\n}\r\n\r\nconst SubMenu = styled.div<{ isOpen: boolean }>`\r\n  align-items: center;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n  border-radius: 0 0 ${({ theme }) => theme.radii.default} ${({ theme }) => theme.radii.default};\r\n  left: 0;\r\n  padding-bottom: 8px;\r\n  padding-top: 16px;\r\n  position: absolute;\r\n  top: calc(100% - 12px);\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  width: 100%;\r\n  z-index: 15;\r\n\r\n  ${({ isOpen }) =>\r\n    isOpen &&\r\n    `\r\n    height: auto;\r\n    opacity: 1;\r\n    transform: scaleY(1);\r\n  `}\r\n`\r\n\r\nconst AddressLink = styled(Text)`\r\n  cursor: pointer;\r\n  overflow-wrap: break-word;\r\n  font-weight: bold;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n`\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  resultFound: ResultStatus.NOT_VALID,\r\n  value: '',\r\n}\r\n\r\nconst defaultValidAddressHandler = () => Promise.resolve(true)\r\n\r\nconst AddressInputSelect: React.FC<AddressInputSelectProps> = ({\r\n  onValidAddress = defaultValidAddressHandler,\r\n  onAddressClick,\r\n  ...props\r\n}) => {\r\n  const [state, setState] = useState(initialState)\r\n  const { t } = useTranslation()\r\n  const { isFetching, resultFound, value } = state\r\n\r\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const { value: newValue } = evt.target\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      value: newValue,\r\n    }))\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setState(initialState)\r\n    onAddressClick(state.value)\r\n  }\r\n\r\n  // When we have a valid address fetch the data\r\n  useEffect(() => {\r\n    const isValidAddress = isAddress(value) !== false\r\n\r\n    const validAddressHandler = async () => {\r\n      try {\r\n        setState((prevState) => ({ ...prevState, isFetching: true }))\r\n        const hasResults = await onValidAddress(value)\r\n\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          isFetching: false,\r\n          resultFound: hasResults ? ResultStatus.FOUND : ResultStatus.NOT_FOUND,\r\n        }))\r\n      } catch {\r\n        setState((prevState) => ({ ...prevState, isFetching: false }))\r\n      }\r\n    }\r\n\r\n    if (isValidAddress) {\r\n      validAddressHandler()\r\n    } else {\r\n      setState((prevState) => ({ ...prevState, resultFound: ResultStatus.NOT_VALID }))\r\n    }\r\n  }, [value, onValidAddress, setState])\r\n\r\n  return (\r\n    <Box position=\"relative\" {...props}>\r\n      <Input\r\n        placeholder={t('Search %subject%', { subject: t('Address').toLowerCase() })}\r\n        value={state.value}\r\n        onChange={handleChange}\r\n        style={{ position: 'relative', zIndex: 16, paddingRight: '40px' }}\r\n      />\r\n      {isFetching && (\r\n        <Box position=\"absolute\" top=\"12px\" right=\"16px\" style={{ zIndex: 17 }}>\r\n          <CircleLoader />\r\n        </Box>\r\n      )}\r\n      <SubMenu isOpen={resultFound !== ResultStatus.NOT_VALID}>\r\n        {resultFound === ResultStatus.FOUND ? (\r\n          <AddressLink onClick={handleClick}>{state.value}</AddressLink>\r\n        ) : (\r\n          <Text px=\"16px\" fontWeight=\"bold\">\r\n            {t('No results found.')}\r\n          </Text>\r\n        )}\r\n      </SubMenu>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AddressInputSelect\r\n","import React from 'react'\r\nimport PageHeader, { PageHeaderProps } from 'components/PageHeader'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nconst MarketPageHeader: React.FC<PageHeaderProps> = (props) => {\r\n  const { theme } = useTheme()\r\n  const background = theme.isDark\r\n    ? 'linear-gradient(166.77deg, #3B4155 0%, #3A3045 100%)'\r\n    : 'linear-gradient(111.68deg, #f2ecf2 0%, #e8f2f6 100%)'\r\n  return <PageHeader background={background} {...props} />\r\n}\r\n\r\nexport default MarketPageHeader\r\n","import styled from 'styled-components'\r\n\r\ninterface AvatarImageProps {\r\n  src: string\r\n  borderColor?: string\r\n  alt?: string\r\n}\r\n\r\nconst AvatarImage = styled.div.attrs<AvatarImageProps>(({ alt }) => ({\r\n  alt,\r\n}))<AvatarImageProps>`\r\n  background: url('${({ src }) => src}');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  width: 96px;\r\n  height: 96px;\r\n  border: 4px ${({ borderColor }) => borderColor || '#f2ecf2'} solid;\r\n\r\n  & > img {\r\n    border-radius: 50%;\r\n  }\r\n`\r\n\r\nexport default AvatarImage\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, BoxProps, Flex, Skeleton, Text } from '@pancakeswap/uikit'\r\n\r\nexport interface StatBoxItemProps extends BoxProps {\r\n  title: string\r\n  stat: string\r\n}\r\n\r\nexport const StatBoxItem: React.FC<StatBoxItemProps> = ({ title, stat, ...props }) => (\r\n  <Box {...props}>\r\n    <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"center\">\r\n      {title}\r\n    </Text>\r\n    {stat === null ? (\r\n      <Skeleton height=\"24px\" width=\"50%\" mx=\"auto\" />\r\n    ) : (\r\n      <Text fontWeight=\"600\" textAlign=\"center\">\r\n        {stat}\r\n      </Text>\r\n    )}\r\n  </Box>\r\n)\r\n\r\nconst StatBox = styled(Flex)`\r\n  align-items: center;\r\n  background: ${({ theme }) => theme.colors.invertedContrast};\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  justify-content: space-around;\r\n  padding: 8px;\r\n  width: 100%;\r\n`\r\n\r\nexport default StatBox\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport AddressInputSelect from 'components/AddressInputSelect'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\n\r\nconst SearchBar: React.FC = (props) => {\r\n  const history = useHistory()\r\n\r\n  const handleAddressClick = (value: string) => {\r\n    history.push(`${nftsBaseUrl}/profile/${value}`)\r\n  }\r\n\r\n  return <AddressInputSelect onAddressClick={handleAddressClick} {...props} />\r\n}\r\n\r\nexport default SearchBar\r\n","import React, { ReactNode } from 'react'\r\nimport { Box, Grid, GridProps, Heading } from '@pancakeswap/uikit'\r\n\r\ninterface MarketPageTitleProps extends GridProps {\r\n  title: string\r\n  description?: ReactNode\r\n}\r\n\r\nconst MarketPageTitle: React.FC<MarketPageTitleProps> = ({ title, description, children, ...props }) => (\r\n  <Grid gridGap=\"16px\" alignItems=\"center\" gridTemplateColumns={['1fr', null, null, null, 'repeat(2, 1fr)']} {...props}>\r\n    <Box>\r\n      <Heading as=\"h1\" scale=\"xl\" color=\"secondary\" mb=\"16px\">\r\n        {title}\r\n      </Heading>\r\n      {description}\r\n    </Box>\r\n    <Box>{children}</Box>\r\n  </Grid>\r\n)\r\n\r\nexport default MarketPageTitle\r\n","import { SubMenuItems } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst BaseSubMenu = styled(SubMenuItems)`\r\n  background-color: transparent;\r\n  border-bottom: 1px ${({ theme }) => theme.colors.cardBorder} solid;\r\n`\r\n\r\nexport default BaseSubMenu\r\n","export const REQUEST_SIZE = 100\r\n","import React from 'react'\r\nimport { Box, ChevronLeftIcon, Flex } from '@pancakeswap/uikit'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\nimport SearchBar from '../components/SearchBar'\r\n\r\nconst BackLink = styled(RouterLink)`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  display: inline-flex;\r\n  font-weight: 600;\r\n`\r\n\r\nconst TopBar: React.FC = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n      <BackLink to={nftsBaseUrl}>\r\n        <ChevronLeftIcon color=\"primary\" width=\"24px\" />\r\n        {t('All Collections')}\r\n      </BackLink>\r\n      <Box>\r\n        <SearchBar />\r\n      </Box>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default TopBar\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getLowestPriceInCollection } from 'state/nftMarket/helpers'\r\nimport { StatBoxItem, StatBoxItemProps } from '../components/StatBox'\r\n\r\ninterface LowestPriceStatBoxItemProps extends Omit<StatBoxItemProps, 'title' | 'stat'> {\r\n  collectionAddress: string\r\n}\r\n\r\nconst LowestPriceStatBoxItem: React.FC<LowestPriceStatBoxItemProps> = ({ collectionAddress, ...props }) => {\r\n  const [lowestPrice, setLowestPrice] = useState<number>(null)\r\n  const { t } = useTranslation()\r\n\r\n  useEffect(() => {\r\n    const fetchLowestPrice = async () => {\r\n      const lowestCollectionPrice = await getLowestPriceInCollection(collectionAddress)\r\n      setLowestPrice(lowestCollectionPrice)\r\n    }\r\n\r\n    fetchLowestPrice()\r\n  }, [collectionAddress, setLowestPrice])\r\n\r\n  const formattedLowestPrice =\r\n    lowestPrice === null\r\n      ? null\r\n      : lowestPrice.toLocaleString(undefined, {\r\n          minimumFractionDigits: 3,\r\n          maximumFractionDigits: 3,\r\n        })\r\n\r\n  return <StatBoxItem title={t('Lowest (%symbol%)', { symbol: 'BNB' })} stat={formattedLowestPrice} {...props} />\r\n}\r\n\r\nexport default LowestPriceStatBoxItem\r\n","import React from 'react'\r\nimport { useLocation, useParams } from 'react-router'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { Collection } from 'state/nftMarket/types'\r\nimport { formatNumber } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Container from 'components/Layout/Container'\r\nimport MarketPageHeader from '../components/MarketPageHeader'\r\nimport MarketPageTitle from '../components/MarketPageTitle'\r\nimport StatBox, { StatBoxItem } from '../components/StatBox'\r\nimport BannerHeader from '../components/BannerHeader'\r\nimport AvatarImage from '../components/BannerHeader/AvatarImage'\r\nimport BaseSubMenu from '../components/BaseSubMenu'\r\nimport { nftsBaseUrl, pancakeBunniesAddress } from '../constants'\r\nimport TopBar from './TopBar'\r\nimport LowestPriceStatBoxItem from './LowestPriceStatBoxItem'\r\n\r\ninterface HeaderProps {\r\n  collection: Collection\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ collection }) => {\r\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\r\n  const { totalSupply, numberTokensListed, totalVolumeBNB, banner, avatar } = collection\r\n  const { t } = useTranslation()\r\n  const { pathname, hash } = useLocation()\r\n\r\n  const isPBCollection = collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\r\n  const DEFAULT_TABS = isPBCollection ? '#items' : '#onsale'\r\n\r\n  const volume = totalVolumeBNB\r\n    ? parseFloat(totalVolumeBNB).toLocaleString(undefined, {\r\n        minimumFractionDigits: 3,\r\n        maximumFractionDigits: 3,\r\n      })\r\n    : '0'\r\n\r\n  const onSaleEntry = {\r\n    label: t('On sale'),\r\n    href: `${nftsBaseUrl}/collections/${collectionAddress}#onsale`,\r\n  }\r\n\r\n  const itemsConfig = [\r\n    {\r\n      label: t('Items'),\r\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#items`,\r\n    },\r\n    {\r\n      label: t('Traits'),\r\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#traits`,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <MarketPageHeader>\r\n        <TopBar />\r\n        <BannerHeader bannerImage={banner.large} avatar={<AvatarImage src={avatar} />} />\r\n        <MarketPageTitle\r\n          title={collection.name}\r\n          description={collection.description ? <Text color=\"textSubtle\">{t(collection.description)}</Text> : null}\r\n        >\r\n          <StatBox>\r\n            <StatBoxItem title={t('Items')} stat={formatNumber(Number(totalSupply), 0, 0)} />\r\n            <StatBoxItem\r\n              title={t('Items listed')}\r\n              stat={numberTokensListed ? formatNumber(Number(numberTokensListed), 0, 0) : '0'}\r\n            />\r\n            <LowestPriceStatBoxItem collectionAddress={collection.address} />\r\n            <StatBoxItem title={t('Vol. (%symbol%)', { symbol: 'BNB' })} stat={volume} />\r\n          </StatBox>\r\n        </MarketPageTitle>\r\n      </MarketPageHeader>\r\n      <Container>\r\n        <BaseSubMenu\r\n          items={isPBCollection ? itemsConfig : [onSaleEntry, ...itemsConfig]}\r\n          activeItem={`${pathname}${hash || DEFAULT_TABS}`}\r\n          mt=\"24px\"\r\n          mb=\"8px\"\r\n        />\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import styled from 'styled-components'\r\n\r\ninterface StyledBannerImageProps {\r\n  src: string\r\n  alt?: string\r\n}\r\n\r\nconst StyledBannerImage = styled.div.attrs<StyledBannerImageProps>(({ alt }) => ({\r\n  alt,\r\n}))<StyledBannerImageProps>`\r\n  ${({ src, theme }) => (src ? `background-image: url('${src}')` : `background-color: ${theme.colors.cardBorder}`)};\r\n  background-image: url('${({ src }) => src}');\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  flex: none;\r\n  width: 100%;\r\n  border-radius: 32px;\r\n  height: 123px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 192px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    height: 256px;\r\n  }\r\n`\r\n\r\nexport default StyledBannerImage\r\n","import React, { ReactNode } from 'react'\r\nimport { Flex, Box, FlexProps } from '@pancakeswap/uikit'\r\nimport BannerImage from './BannerImage'\r\n\r\ninterface BannerHeaderProps extends FlexProps {\r\n  bannerImage: string\r\n  bannerAlt?: string\r\n  avatar?: ReactNode\r\n}\r\n\r\nconst BannerHeader: React.FC<BannerHeaderProps> = ({ bannerImage, bannerAlt, avatar, children, ...props }) => {\r\n  return (\r\n    <Flex flexDirection=\"column\" mb=\"24px\" {...props}>\r\n      <Box position=\"relative\" pb=\"56px\">\r\n        <BannerImage src={bannerImage} alt={bannerAlt} />\r\n        <Box position=\"absolute\" bottom={0} left={-4}>\r\n          <Flex alignItems=\"flex-end\">\r\n            {avatar}\r\n            {children}\r\n          </Flex>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default BannerHeader\r\n"],"sourceRoot":""}