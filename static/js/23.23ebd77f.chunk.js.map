{"version":3,"sources":["components/Layout/Flex.tsx","hooks/useIntersectionObserver.ts","utils/latinise.ts","components/SearchInput/SearchInput.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","components/Modal/Spacer.tsx","components/Modal/ModalActions.tsx","components/Modal/ModalInput.tsx","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/hooks/useUnstakeFarms.ts","views/Farms/hooks/useStakeFarms.ts","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/hooks/useHarvestFarm.ts","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/hooks/useApproveFarm.ts","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","hooks/useDelayedUnmount.ts","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/types.ts","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/ToggleView/ToggleView.tsx","views/Farms/Farms.tsx","components/Balance.tsx","utils/calls/estimateGas.ts","utils/getGasPrice.ts","utils/calls/farms.ts","utils/calls/pools.ts","components/PageHeader/PageHeader.tsx","../node_modules/react-countup/build/index.js","../node_modules/countup.js/dist/countUp.min.js","components/Select/Select.tsx","components/TokenImage/index.tsx","components/Loading.tsx"],"names":["FlexLayout","styled","div","useIntersectionObserver","observerRef","useRef","intersectionObserverRef","useState","observerIsSet","setObserverIsSet","isIntersecting","setIsIntersecting","useEffect","current","IntersectionObserver","entry","rootMargin","threshold","observe","disconnect","Latinise","latin_map","τ","Τ","latinise","input","replace","x","StyledInput","Input","InputWrapper","theme","mediaQueries","sm","SearchInput","onChangeCallback","onChange","placeholder","searchText","setSearchText","t","useTranslation","debouncedOnChange","useMemo","debounce","e","value","target","Wrapper","colors","primary","ExpandableSectionButton","onClick","expanded","role","color","bold","defaultProps","EditingCurrency","CalculatorMode","getLiquidityUrlPathParts","quoteTokenAddress","tokenAddress","wBnbAddress","tokens","wbnb","address","secondPart","StyledLinkExternal","LinkExternal","DetailsSection","bscScanAddress","infoAddress","removed","totalValueFormatted","lpLabel","addLiquidityUrl","justifyContent","width","height","href","symbol","Flex","MultiplierTag","Tag","CardHeading","multiplier","token","isCommunityFarm","quoteToken","isTokenOnly","image","alignItems","mb","src","alt","variant","primaryToken","secondaryToken","flexDirection","split","ml","StyledSpacer","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","StyledTokenInput","isWarning","shadows","warning","inset","text","xs","StyledErrorMessage","Text","ModalInput","max","onSelectMax","inputTitle","decimals","isBalanceZero","style","position","pl","fontSize","balance","balanceUnits","parseUnits","formatBigNumber","displayBalance","pattern","inputMode","step","min","scale","mr","external","Footer","dropdown","BulletList","ul","textSubtle","RoiCalculatorFooter","isFarm","apr","displayApr","autoCompoundFrequency","linkLabel","linkHref","performanceFee","isExpanded","setIsExpanded","useTooltip","my","placement","tooltipOffset","multiplierRef","targetRef","multiplierTooltip","tooltip","multiplierTooltipVisible","tooltipVisible","gridRowCount","apy","getApy","toFixed","p","prev","px","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","compoundTimes","ref","display","mt","fee","compoundingIndexToFrequency","initialState","controls","compounding","compoundingFrequency","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","data","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","state","action","type","payload","toggledCompounding","index","PRINCIPAL_BASED_ON_ROI","parseFloat","currencyAfterChange","TOKEN","useRoiCalculatorReducer","stakingTokenPrice","earningTokenPrice","useReducer","dispatch","principalInUSDAsNumber","compoundFrequency","interestBreakdown","getInterestBreakdown","principalInUSD","hasInterest","Number","isNaN","roiAsUSD","getRoi","amountEarned","amountInvested","principalForExpectedRoi","getPrincipalForInterest","principalUSD","principalToken","BigNumber","setPrincipalFromUSDValue","amount","principalAsTokenBN","gt","setPrincipalFromTokenValue","useCallback","principalAsUsdBN","times","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","toNumber","MILLION","RoiCardWrapper","Box","radii","default","RoiCardInner","gradients","bubblegum","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","fadeOut","background","RoiCard","earningTokenSymbol","calculatorState","inputRef","focus","onEnterEditing","textTransform","event","currentTarget","toLocaleString","minimumFractionDigits","maximumFractionDigits","rotate","keyframes","ArrowContainer","AnimatedArrow","key","setKey","prevKey","prevId","parseInt","StyledModal","Modal","ScrollableContainer","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal","onDismiss","onBack","stakingTokenBalance","stakingTokenSymbol","initialValue","account","useActiveWeb3React","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","onUserInput","title","headerBackground","asset","currencyValue","innerRef","unit","switchEditingUnits","onFocus","lte","getBalanceNumber","toString","toLocaleUpperCase","activeIndex","onItemClick","flex","checked","AnnualRoiContainer","AnnualRoiDisplay","DepositModal","stakedBalance","onConfirm","tokenName","lpPrice","cakePrice","val","setVal","useToast","toastSuccess","toastError","pendingTx","setPendingTx","showRoiCalculator","setShowRoiCalculator","fullBalance","getFullDisplayBalance","lpTokensToStake","fullBalanceNumber","usdToStake","annualRoi","formattedAnnualRoi","formatNumber","handleChange","validity","valid","handleSelectMax","plus","isFinite","eq","a","console","error","alignSelf","WithdrawModal","valNumber","useUnstakeFarms","pid","masterChefContract","useMasterchef","onUnstake","unstakeFarm","useStakeFarms","onStake","stakeFarm","txHash","info","IconButtonWrapper","StakeAction","tokenBalance","location","useLocation","useAppDispatch","useWeb3React","useLpTokenPrice","handleStake","fetchFarmUserDataAsync","pids","handleUnstake","stakedBalanceBigNumber","getBalanceAmount","lt","ROUND_DOWN","useModal","onPresentDeposit","onPresentWithdraw","Balance","prefix","some","item","pathname","includes","useHarvestFarm","farmPid","onReward","harvestFarm","HarvestAction","earnings","usePriceCakeBusd","rawEarningsBalance","BIG_ZERO","earningsBusd","multipliedBy","useApproveFarm","lpContract","callWithGasPrice","useCallWithGasPrice","onApprove","ethers","constants","MaxUint256","tx","wait","receipt","status","Action","CardActions","farm","requestedApproval","setRequestedApproval","lpAddresses","userData","allowance","log","lpAddress","getAddress","isApproved","isGreaterThan","useERC20","handleApprove","pr","lpSymbol","ConnectWalletButton","ApyLabelContainer","ApyButton","useFarmUser","onPresentApyModal","stopPropagation","StyledCard","Card","FarmCardInnerContainer","ExpandingWrapper","cardBorder","FarmCard","showExpandableSection","setShowExpandableSection","liquidity","undefined","toUpperCase","earnLabel","dual","liquidityUrlPathParts","BASE_ADD_LIQUIDITY_URL","BASE_URL","isPromotedFarm","depositFee","depositFeeBP","isActive","CardActionsContainer","getBscScanLink","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","Container","AprWrapper","Apr","originalValue","hideButton","TokenWrapper","Farm","label","rawStakedBalance","Amount","span","earned","textDisabled","Earned","userDataReady","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isDesktop","useMatchBreakpoints","ReferenceElement","MultiplierWrapper","lg","Multiplier","displayMultiplier","toLowerCase","tooltipContent","LiquidityWrapper","Liquidity","displayLiquidity","ActionContainer","xl","ActionTitles","ActionContent","earningsBigNumber","isZero","Staked","marginBottom","marginTop","expandAnimation","collapseAnimation","css","StakeContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","bsc","StakedAction","Label","ContentContainer","CellLayout","MobileColumnSchema","id","name","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","toggleActionPanel","isMobile","isSmallerScreen","tableSchema","columnNames","column","Object","keys","columnIndex","indexOf","createElement","colSpan","card","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","columns","rows","useTable","sortColumn","row","original","scrollIntoView","behavior","FarmTabButtons","hasStakeInFinishedFarms","url","useRouteMatch","as","Link","to","show","ToggleView","viewMode","onToggle","handleToggle","ViewMode","CARD","TABLE","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","StyledImage","Image","getDisplayApr","cakeRewardsApr","lpRewardsApr","Farms","farmsProps","path","useFarms","farmsLP","userDataLoaded","query","setQuery","useUserFarmsViewMode","setViewMode","sortOption","setSortOption","chosenFarmsLength","tokenMode","isArchived","isInactive","usePollFarmsWithUserData","useUserFarmStakedOnly","stakedOnly","setStakedOnly","activeFarms","filter","isArchivedPid","inactiveFarms","archivedFarms","stakedOnlyFarms","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","lpTotalInQuoteToken","quoteTokenPriceBusd","totalLiquidity","getFarmApr","poolWeight","ChainId","MAINNET","lowercaseQuery","numberOfFarmsVisible","setNumberOfFarmsVisible","chosenFarmsMemoized","chosenFarms","farms","orderBy","slice","sortFarms","farmsCurrentlyVisible","rowData","PageHeader","Page","Select","options","onOptionChange","option","marginLeft","sort","b","exact","renderContent","Loading","isDisabled","previousValue","start","end","suffix","duration","separator","estimateGas","contract","methodName","methodArgs","gasMarginPer10000","Error","rawGasEstimation","gasEstimation","mul","from","add","callWithEstimateGas","overrides","gasLimit","getGasPrice","userGas","store","getState","user","gasPrice","GAS_PRICE_GWEI","process","testnet","DEFAULT_GAS_LIMIT","DEFAULT_TOKEN_DECIMAL","deposit","withdraw","getActivePools","block","eligiblePools","pools","pool","sousId","isFinished","simpleRpcProvider","getBlockNumber","blockNumber","startBlockCalls","contractAddress","endBlockCalls","multicall","sousChefV2","startBlocks","endBlocks","reduce","accum","poolCheck","startBlock","endBlock","gte","Outer","Inner","defineProperty","exports","PropTypes","require","CountUp$1","_interopDefaultLegacy","PropTypes__default","React__default","warning__default","CountUp__default","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","arguments","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_classCallCheck","instance","Constructor","TypeError","_defineProperties","descriptor","configurable","writable","obj","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","call","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","_isNativeReflectConstruct","result","Super","NewTarget","this","constructor","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","err","_iterableToArrayLimit","minLen","_arrayLikeToArray","n","test","_unsupportedIterableToArray","_nonIterableRest","len","arr2","createCountUpInstance","el","decimal","easingFn","formattingFn","useEasing","useGrouping","CountUp","_Component","subClass","superClass","create","_inherits","protoProps","staticProps","_super","_this","_len","args","_key","concat","updatedProps","_this$props","redraw","className","containerRef","HTMLElement","SVGTextElement","SVGTSpanElement","_assertThisInitialize","reset","restart","update","onPauseResume","pauseResume","_assertThisInitialize2","onReset","_assertThisInitialize3","_this$props2","delay","onEnd","onStart","run","newEnd","_assertThisInitialize4","onUpdate","createRef","_this$props3","createInstance","nextProps","checkProps","prevProps","_this$props4","preserveValue","_this$props5","countUpRef","Component","string","number","func","isRequired","bool","startOnMount","MOCK_ELEMENT","innerHTML","useCountUp","_props","_useState2","count","setCount","timerRef","getCountUp","countUp","newCountUp","formattingFnRef","define","r","Math","abs","numerals","pow","u","version","m","hasOwnProperty","d","c","f","window","requestAnimationFrame","cancelAnimationFrame","Date","getTime","initialize","initialized","document","getElementById","startVal","endVal","dec","countDown","frameVal","printValue","tagName","textContent","startTime","timestamp","remaining","round","rAF","callback","paused","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","boxShadow","DropDownList","ListItem","li","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","handleClickOutside","addEventListener","removeEventListener","selectedIndex","getImageUrlFromToken","TokenPairImage","primarySrc","secondarySrc","TokenImage"],"mappings":"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","file":"static/js/23.23ebd77f.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import { useEffect, useRef, useState } from 'react'\r\n\r\nconst useIntersectionObserver = () => {\r\n  const observerRef = useRef<HTMLDivElement>(null)\r\n  const intersectionObserverRef = useRef<IntersectionObserver>(null)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n  const [isIntersecting, setIsIntersecting] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const checkObserverIsIntersecting = ([entry]: IntersectionObserverEntry[]) => {\r\n      setIsIntersecting(entry.isIntersecting)\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      intersectionObserverRef.current = new IntersectionObserver(checkObserverIsIntersecting, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      intersectionObserverRef.current.observe(observerRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n\r\n    return () => {\r\n      if (intersectionObserverRef.current && observerIsSet) {\r\n        intersectionObserverRef.current.disconnect()\r\n      }\r\n    }\r\n  }, [observerIsSet])\r\n\r\n  return { observerRef, isIntersecting }\r\n}\r\n\r\nexport default useIntersectionObserver\r\n","export const Latinise = {\r\n  latin_map: {\r\n    τ: 't',\r\n    Τ: 'T',\r\n  },\r\n}\r\n\r\nexport const latinise = (input: string) => {\r\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\r\n}\r\n","import React, { useState, useMemo } from 'react'\r\nimport { Input } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport debounce from 'lodash/debounce'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledInput = styled(Input)`\r\n  border-radius: 16px;\r\n  margin-left: auto;\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: block;\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n}\r\n\r\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\r\n  const [searchText, setSearchText] = useState('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const debouncedOnChange = useMemo(\r\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\r\n    [onChangeCallback],\r\n  )\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.target.value)\r\n    debouncedOnChange(e)\r\n  }\r\n\r\n  return (\r\n    <InputWrapper>\r\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\r\n    </InputWrapper>\r\n  )\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Wrapper aria-label={t('Hide or show expandable content')} role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? t('Hide') : t('Details')}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","import { useEffect, useReducer, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\r\n\r\n/**\r\n * This hook is handling all the calculator state and calculations.\r\n * UI connected to it is merely representation of the data and buttons to trigger actions\r\n */\r\n\r\n// Mapping from the compounding frequency button index to actual compounding frequency\r\n// in number of compounds per day\r\nconst compoundingIndexToFrequency = {\r\n  0: 1,\r\n  1: 0.142857142,\r\n  2: 0.071428571, // once every 7 days\r\n  3: 0.033333333, // once every 30 days\r\n}\r\n\r\nconst TOKEN_PRECISION = 10\r\nconst USD_PRECISION = 2\r\n\r\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\r\nexport enum EditingCurrency {\r\n  TOKEN,\r\n  USD,\r\n}\r\n\r\n// Calculator works in 2 modes\r\nexport enum CalculatorMode {\r\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\r\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\r\n}\r\n\r\nexport interface RoiCalculatorReducerState {\r\n  controls: {\r\n    compounding: boolean // Compounding checkbox state\r\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\r\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\r\n    stakingDuration: number // index of active staking duration button in ButtonMenu\r\n    mode: CalculatorMode\r\n    editingCurrency: EditingCurrency\r\n  }\r\n  data: {\r\n    principalAsToken: string // Used as value for Inputs\r\n    principalAsUSD: string // Used as value for Inputs\r\n    roiUSD: number\r\n    roiTokens: number\r\n    roiPercentage: number // ROI expressed in percentage relative to principal\r\n  }\r\n}\r\n\r\nconst initialState: RoiCalculatorReducerState = {\r\n  controls: {\r\n    compounding: true,\r\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\r\n    activeCompoundingIndex: 0, // active compounding selected in\r\n    stakingDuration: 3,\r\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\r\n    editingCurrency: EditingCurrency.USD,\r\n  },\r\n  data: {\r\n    principalAsToken: '0.00',\r\n    principalAsUSD: '',\r\n    roiUSD: 0,\r\n    roiTokens: 0,\r\n    roiPercentage: 0,\r\n  },\r\n}\r\n\r\nconst roiCalculatorReducer = (\r\n  state: RoiCalculatorReducerState,\r\n  action: { type: string; payload?: any },\r\n): RoiCalculatorReducerState => {\r\n  switch (action.type) {\r\n    case 'setStakingDuration': {\r\n      const controls = { ...state.controls, stakingDuration: action.payload }\r\n      return {\r\n        ...state,\r\n        controls,\r\n      }\r\n    }\r\n    case 'toggleCompounding': {\r\n      const toggledCompounding = !state.controls.compounding\r\n      const controls = { ...state.controls, compounding: toggledCompounding }\r\n      return {\r\n        ...state,\r\n        controls,\r\n      }\r\n    }\r\n    case 'setCompoundingFrequency': {\r\n      const { index, autoCompoundFrequency } = action.payload\r\n      if (autoCompoundFrequency) {\r\n        return {\r\n          ...state,\r\n          controls: {\r\n            ...state.controls,\r\n            compoundingFrequency: autoCompoundFrequency,\r\n          },\r\n        }\r\n      }\r\n      const compoundingFrequency = compoundingIndexToFrequency[index]\r\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\r\n      return {\r\n        ...state,\r\n        controls,\r\n      }\r\n    }\r\n    case 'setPrincipal': {\r\n      const { principalAsUSD, principalAsToken } = action.payload\r\n      const data = { ...state.data, principalAsUSD, principalAsToken }\r\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\r\n      return {\r\n        controls,\r\n        data,\r\n      }\r\n    }\r\n    case 'setPrincipalForTargetRoi': {\r\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\r\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\r\n      return {\r\n        ...state,\r\n        data,\r\n      }\r\n    }\r\n    case 'setCalculatorMode': {\r\n      const mode = action.payload\r\n      const controls = { ...state.controls, mode }\r\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\r\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\r\n        const data = { ...state.data, roiUSD }\r\n        return { controls, data }\r\n      }\r\n      return { ...state, controls }\r\n    }\r\n    case 'setRoi': {\r\n      const data = { ...state.data, ...action.payload }\r\n      return { ...state, data }\r\n    }\r\n    case 'setTargetRoi': {\r\n      const { roiUSD, roiTokens } = action.payload\r\n      const data = { ...state.data, roiUSD, roiTokens }\r\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\r\n      return { controls, data }\r\n    }\r\n    case 'toggleEditingCurrency': {\r\n      const currencyAfterChange =\r\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\r\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\r\n      return { ...state, controls }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst useRoiCalculatorReducer = (\r\n  stakingTokenPrice: number,\r\n  earningTokenPrice: number,\r\n  apr: number,\r\n  autoCompoundFrequency: number,\r\n  performanceFee: number,\r\n) => {\r\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\r\n  const { principalAsUSD, roiUSD } = state.data\r\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\r\n\r\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\r\n  useEffect(() => {\r\n    if (autoCompoundFrequency > 0) {\r\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\r\n    }\r\n  }, [autoCompoundFrequency])\r\n\r\n  // Calculates and sets ROI whenever related values change\r\n  useEffect(() => {\r\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\r\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\r\n      const compoundFrequency = compounding ? compoundingFrequency : 0\r\n      const interestBreakdown = getInterestBreakdown({\r\n        principalInUSD: principalInUSDAsNumber,\r\n        apr,\r\n        earningTokenPrice,\r\n        compoundFrequency,\r\n        performanceFee,\r\n      })\r\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\r\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\r\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\r\n      const roiPercentage = hasInterest\r\n        ? getRoi({\r\n            amountEarned: roiAsUSD,\r\n            amountInvested: principalInUSDAsNumber,\r\n          })\r\n        : 0\r\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\r\n    }\r\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\r\n\r\n  // Calculates and sets principal based on expected ROI value\r\n  useEffect(() => {\r\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\r\n      const principalForExpectedRoi = getPrincipalForInterest(\r\n        roiUSD,\r\n        apr,\r\n        compounding ? compoundingFrequency : 0,\r\n        performanceFee,\r\n      )\r\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\r\n        ? principalForExpectedRoi[stakingDuration]\r\n        : 0\r\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\r\n      const roiPercentage = getRoi({\r\n        amountEarned: roiUSD,\r\n        amountInvested: principalUSD,\r\n      })\r\n      dispatch({\r\n        type: 'setPrincipalForTargetRoi',\r\n        payload: {\r\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\r\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\r\n          roiPercentage,\r\n        },\r\n      })\r\n    }\r\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\r\n\r\n  // Handler for compounding frequency buttons\r\n  const setCompoundingFrequency = (index: number) => {\r\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\r\n  }\r\n\r\n  // Handler for principal input when in USD mode\r\n  const setPrincipalFromUSDValue = (amount: string) => {\r\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\r\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\r\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\r\n  }\r\n\r\n  // Handler for principal input when in Token mode\r\n  const setPrincipalFromTokenValue = useCallback(\r\n    (amount: string) => {\r\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\r\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\r\n      dispatch({\r\n        type: 'setPrincipal',\r\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\r\n      })\r\n    },\r\n    [stakingTokenPrice],\r\n  )\r\n\r\n  // Handler for staking duration buttons\r\n  const setStakingDuration = (stakingDurationIndex: number) => {\r\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\r\n  }\r\n\r\n  // Handler for compounding checkbox\r\n  const toggleCompounding = () => {\r\n    dispatch({ type: 'toggleCompounding' })\r\n  }\r\n\r\n  // Handler for principal input mode switch\r\n  const toggleEditingCurrency = () => {\r\n    dispatch({ type: 'toggleEditingCurrency' })\r\n  }\r\n\r\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\r\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\r\n  }\r\n\r\n  // Handler for ROI input\r\n  const setTargetRoi = (amount: string) => {\r\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\r\n    dispatch({\r\n      type: 'setTargetRoi',\r\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\r\n    })\r\n  }\r\n\r\n  return {\r\n    state,\r\n    setPrincipalFromUSDValue,\r\n    setPrincipalFromTokenValue,\r\n    setStakingDuration,\r\n    toggleCompounding,\r\n    toggleEditingCurrency,\r\n    setCompoundingFrequency,\r\n    setCalculatorMode,\r\n    setTargetRoi,\r\n  }\r\n}\r\n\r\nexport default useRoiCalculatorReducer\r\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\r\n// Each part of the url represents a different side of the LP pair.\r\nimport tokens from 'config/constants/tokens'\r\n\r\nconst getLiquidityUrlPathParts = ({\r\n  quoteTokenAddress,\r\n  tokenAddress,\r\n}: {\r\n  quoteTokenAddress: string\r\n  tokenAddress: string\r\n}): string => {\r\n  const wBnbAddress = tokens.wbnb.address\r\n  const firstPart = !quoteTokenAddress || quoteTokenAddress === wBnbAddress ? 'BNB' : quoteTokenAddress\r\n  const secondPart = !tokenAddress || tokenAddress === wBnbAddress ? 'BNB' : tokenAddress\r\n  return `${firstPart}/${secondPart}`\r\n}\r\n\r\nexport default getLiquidityUrlPathParts\r\n","import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, LinkExternal, Skeleton } from '@pancakeswap/uikit'\r\n\r\nexport interface ExpandableSectionProps {\r\n  bscScanAddress?: string\r\n  infoAddress?: string\r\n  removed?: boolean\r\n  totalValueFormatted?: string\r\n  lpLabel?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  font-weight: 400;\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  bscScanAddress,\r\n  infoAddress,\r\n  removed,\r\n  totalValueFormatted,\r\n  lpLabel,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{t('Total Liquidity')}:</Text>\r\n        {totalValueFormatted ? <Text>{totalValueFormatted}</Text> : <Skeleton width={75} height={25} />}\r\n      </Flex>\r\n      {!removed && (\r\n        <StyledLinkExternal href={addLiquidityUrl}>{t('Get %symbol%', { symbol: lpLabel })}</StyledLinkExternal>\r\n      )}\r\n      <StyledLinkExternal href={bscScanAddress}>{t('View Contract')}</StyledLinkExternal>\r\n      <StyledLinkExternal href={infoAddress}>{t('See Pair Info')}</StyledLinkExternal>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading, Skeleton, Image } from '@pancakeswap/uikit'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { CommunityTag, CoreTag } from 'components/Tags'\r\nimport { TokenPairImage } from 'components/TokenImage'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  isCommunityFarm?: boolean\r\n  token: Token\r\n  quoteToken: Token\r\n  isTokenOnly?: boolean\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 4px;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, multiplier, isCommunityFarm, token, quoteToken, isTokenOnly }) => {\r\n  let image = `/images/tokens/${token.address}.svg`\r\n  if(isTokenOnly) {\r\n    image = `/images/tokens/${token.address}.png`\r\n  }\r\n\r\n  return (\r\n      <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n        {\r\n            isTokenOnly ? \r\n            <Image src={image} width={64} height={64} alt=\"Token Image\" /> : \r\n            <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={64} height={64} />\r\n            }\r\n      {/* <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={64} height={64} /> */}\r\n      \r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\r\n        <Flex justifyContent=\"center\">\r\n          {multiplier ? (\r\n            <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\r\n          ) : (\r\n            <Skeleton ml=\"4px\" width={42} height={28} />\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Spacer from './Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px 0;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nexport default ModalActions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, Input, InputProps, Flex, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { parseUnits } from 'ethers/lib/utils'\r\nimport { formatBigNumber } from 'utils/formatBalance'\r\n\r\ninterface ModalInputProps {\r\n  max: string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  value: string\r\n  addLiquidityUrl?: string\r\n  inputTitle?: string\r\n  decimals?: number\r\n}\r\n\r\nconst getBoxShadow = ({ isWarning = false, theme }) => {\r\n  if (isWarning) {\r\n    return theme.shadows.warning\r\n  }\r\n\r\n  return theme.shadows.inset\r\n}\r\n\r\nconst StyledTokenInput = styled.div<InputProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  box-shadow: ${getBoxShadow};\r\n  color: ${({ theme }) => theme.colors.text};\r\n  padding: 8px 16px 8px 0;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledInput = styled(Input)`\r\n  box-shadow: none;\r\n  width: 60px;\r\n  margin: 0 8px;\r\n  padding: 0 8px;\r\n  border: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    width: 80px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst StyledErrorMessage = styled(Text)`\r\n  position: absolute;\r\n  bottom: -22px;\r\n  a {\r\n    display: inline;\r\n  }\r\n`\r\n\r\nconst ModalInput: React.FC<ModalInputProps> = ({\r\n  max,\r\n  symbol,\r\n  onChange,\r\n  onSelectMax,\r\n  value,\r\n  addLiquidityUrl,\r\n  inputTitle,\r\n  decimals = 18,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const isBalanceZero = max === '0' || !max\r\n\r\n  const displayBalance = (balance: string) => {\r\n    if (isBalanceZero) {\r\n      return '0'\r\n    }\r\n\r\n    const balanceUnits = parseUnits(balance, decimals)\r\n    return formatBigNumber(balanceUnits, decimals, decimals)\r\n  }\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <StyledTokenInput isWarning={isBalanceZero}>\r\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\r\n          <Text fontSize=\"14px\">{inputTitle}</Text>\r\n          <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: displayBalance(max) })}</Text>\r\n        </Flex>\r\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\r\n          <StyledInput\r\n            pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\r\n            inputMode=\"decimal\"\r\n            step=\"any\"\r\n            min=\"0\"\r\n            onChange={onChange}\r\n            placeholder=\"0\"\r\n            value={value}\r\n          />\r\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\r\n            {t('Max')}\r\n          </Button>\r\n          <Text fontSize=\"16px\">{symbol}</Text>\r\n        </Flex>\r\n      </StyledTokenInput>\r\n      {isBalanceZero && (\r\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\r\n          {t('No tokens to stake')}:{' '}\r\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\r\n            {t('Get %symbol%', { symbol })}\r\n          </Link>\r\n        </StyledErrorMessage>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalInput\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getApy } from 'utils/compoundApyHelpers'\r\n\r\nconst Footer = styled(Flex)`\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.colors.dropdown};\r\n`\r\n\r\nconst BulletList = styled.ul`\r\n  list-style-type: none;\r\n  margin-top: 16px;\r\n  padding: 0;\r\n  li {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  li::before {\r\n    content: '•';\r\n    margin-right: 4px;\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n  li::marker {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\ninterface RoiCalculatorFooterProps {\r\n  isFarm: boolean\r\n  apr: number\r\n  displayApr: string\r\n  autoCompoundFrequency: number\r\n  multiplier: string\r\n  linkLabel: string\r\n  linkHref: string\r\n  performanceFee: number\r\n}\r\n\r\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\r\n  isFarm,\r\n  apr,\r\n  displayApr,\r\n  autoCompoundFrequency,\r\n  multiplier,\r\n  linkLabel,\r\n  linkHref,\r\n  performanceFee,\r\n}) => {\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  const { t } = useTranslation()\r\n  const {\r\n    targetRef: multiplierRef,\r\n    tooltip: multiplierTooltip,\r\n    tooltipVisible: multiplierTooltipVisible,\r\n  } = useTooltip(\r\n    <>\r\n      <Text>\r\n        {t(\r\n          'The Multiplier represents the proportion of UBUT rewards each farm receives, as a proportion of the UBUT produced each block.',\r\n        )}\r\n      </Text>\r\n      <Text my=\"24px\">\r\n        {t('For example, if a 1x farm received 1 UBUT per block, a 40x farm would receive 40 UBUT per block.')}\r\n      </Text>\r\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\r\n    </>,\r\n    { placement: 'top-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  const gridRowCount = isFarm ? 4 : 2\r\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\r\n\r\n  return (\r\n    <Footer p=\"16px\" flexDirection=\"column\">\r\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\r\n        {isExpanded ? t('Hide') : t('Details')}\r\n      </ExpandableLabel>\r\n      {isExpanded && (\r\n        <Box px=\"8px\">\r\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\r\n            {isFarm && (\r\n              <>\r\n                <Text color=\"textSubtle\" small>\r\n                  {t('APR (incl. LP rewards)')}\r\n                </Text>\r\n                <Text small textAlign=\"right\">\r\n                  {displayApr}%\r\n                </Text>\r\n              </>\r\n            )}\r\n            <Text color=\"textSubtle\" small>\r\n              {isFarm ? t('Base APR (CAKE yield only)') : t('APR')}\r\n            </Text>\r\n            <Text small textAlign=\"right\">\r\n              {apr.toFixed(2)}%\r\n            </Text>\r\n            <Text color=\"textSubtle\" small>\r\n              {t('APY (%compoundTimes%x daily compound)', {\r\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\r\n              })}\r\n            </Text>\r\n            <Text small textAlign=\"right\">\r\n              {apy}%\r\n            </Text>\r\n            {isFarm && (\r\n              <>\r\n                <Text color=\"textSubtle\" small>\r\n                  {t('Farm Multiplier')}\r\n                </Text>\r\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\r\n                  <Text small textAlign=\"right\" mr=\"4px\">\r\n                    {multiplier}\r\n                  </Text>\r\n                  <span ref={multiplierRef}>\r\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\r\n                  </span>\r\n                  {multiplierTooltipVisible && multiplierTooltip}\r\n                </Flex>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <BulletList>\r\n            <li>\r\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                {t('Calculated based on current rates.')}\r\n              </Text>\r\n            </li>\r\n            {isFarm && (\r\n              <li>\r\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\r\n                </Text>\r\n              </li>\r\n            )}\r\n            <li>\r\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                {t(\r\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n                )}\r\n              </Text>\r\n            </li>\r\n            {performanceFee > 0 && (\r\n              <li>\r\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\r\n                    fee: performanceFee,\r\n                  })}\r\n                </Text>\r\n              </li>\r\n            )}\r\n          </BulletList>\r\n          <Flex justifyContent=\"center\" mt=\"24px\">\r\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\r\n          </Flex>\r\n        </Box>\r\n      )}\r\n    </Footer>\r\n  )\r\n}\r\n\r\nexport default RoiCalculatorFooter\r\n","import React, { useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\r\n\r\nconst MILLION = 1000000\r\nconst TRILLION = 1000000000000\r\n\r\nconst RoiCardWrapper = styled(Box)`\r\n  background: linear-gradient(180deg, #53dee9, #7645d9);\r\n  padding: 1px;\r\n  width: 100%;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n`\r\n\r\nconst RoiCardInner = styled(Box)`\r\n  height: 120px;\r\n  padding: 24px;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n`\r\n\r\nconst RoiInputContainer = styled(Box)`\r\n  position: relative;\r\n  & > input {\r\n    padding-left: 28px;\r\n    max-width: 70%;\r\n  }\r\n  &:before {\r\n    position: absolute;\r\n    content: '$';\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n    left: 16px;\r\n    top: 8px;\r\n  }\r\n`\r\n\r\nconst RoiDisplayContainer = styled(Flex)`\r\n  max-width: 82%;\r\n  margin-right: 8px;\r\n`\r\n\r\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\r\n  position: relative;\r\n  overflow-x: auto;\r\n  &::-webkit-scrollbar {\r\n    height: 0px;\r\n  }\r\n\r\n  ${({ fadeOut, theme }) =>\r\n    fadeOut &&\r\n    `\r\n      &:after {\r\n        background: linear-gradient(\r\n          to right,\r\n          ${theme.colors.background}00,\r\n          ${theme.colors.background}E6\r\n        );\r\n        content: '';\r\n        height: 100%;\r\n        pointer-events: none;\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        width: 40px;\r\n      }\r\n  `}\r\n`\r\n\r\ninterface RoiCardProps {\r\n  earningTokenSymbol: string\r\n  calculatorState: RoiCalculatorReducerState\r\n  setTargetRoi: (amount: string) => void\r\n  setCalculatorMode: (mode: CalculatorMode) => void\r\n}\r\n\r\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\r\n  const inputRef = useRef<HTMLInputElement | null>(null)\r\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\r\n  const { mode } = calculatorState.controls\r\n\r\n  const { t } = useTranslation()\r\n\r\n  useEffect(() => {\r\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\r\n      inputRef.current.focus()\r\n    }\r\n  }, [mode])\r\n\r\n  const onEnterEditing = () => {\r\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\r\n  }\r\n\r\n  const onExitRoiEditing = () => {\r\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\r\n  }\r\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTargetRoi(event.currentTarget.value)\r\n  }\r\n  return (\r\n    <RoiCardWrapper>\r\n      <RoiCardInner>\r\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\r\n          {t('ROI at current rates')}\r\n        </Text>\r\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\r\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\r\n            <>\r\n              <RoiInputContainer>\r\n                <Input\r\n                  ref={inputRef}\r\n                  type=\"number\"\r\n                  inputMode=\"decimal\"\r\n                  pattern=\"\\d*\"\r\n                  scale=\"sm\"\r\n                  value={roiUSD}\r\n                  placeholder=\"0.0\"\r\n                  onChange={handleExpectedRoiChange}\r\n                />\r\n              </RoiInputContainer>\r\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\r\n                <CheckmarkIcon color=\"primary\" />\r\n              </IconButton>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <RoiDisplayContainer onClick={onEnterEditing}>\r\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\r\n                <Text fontSize=\"24px\" bold>\r\n                  $\r\n                </Text>\r\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\r\n                  {roiUSD.toLocaleString('en', {\r\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\r\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\r\n                  })}\r\n                </RoiDollarAmount>\r\n              </RoiDisplayContainer>\r\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\r\n                <PencilIcon color=\"primary\" />\r\n              </IconButton>\r\n            </>\r\n          )}\r\n        </Flex>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\">\r\n          ~ {roiTokens} {earningTokenSymbol} (\r\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n          %)\r\n        </Text>\r\n      </RoiCardInner>\r\n    </RoiCardWrapper>\r\n  )\r\n}\r\n\r\nexport default RoiCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\r\n\r\nconst rotate = keyframes`\r\n  0% {\r\n    transform: scale(1);\r\n    stroke-width: 0;\r\n  }\r\n  50% {\r\n    transform: scale(1.3);\r\n    stroke-width: 2;\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n    stroke-width: 0;\r\n  }\r\n`\r\n\r\nconst ArrowContainer = styled(Flex)`\r\n  & > svg {\r\n    animation: 0.2s ${rotate} linear;\r\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\r\n    stroke-width: 0;\r\n  }\r\n`\r\n\r\ninterface AnimatedArrowProps {\r\n  calculatorState: RoiCalculatorReducerState\r\n}\r\n\r\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\r\n  const [key, setKey] = useState('roiArrow-0')\r\n  const { mode } = calculatorState.controls\r\n\r\n  // Trigger animation on state change\r\n  useEffect(() => {\r\n    setKey((prevKey) => {\r\n      const prevId = parseInt(prevKey.split('-')[1], 10)\r\n      return `roiArrow-${prevId + 1}`\r\n    })\r\n  }, [calculatorState])\r\n\r\n  return (\r\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\r\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\r\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\r\n      ) : (\r\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\r\n      )}\r\n    </ArrowContainer>\r\n  )\r\n}\r\n\r\nexport default AnimatedArrow\r\n","import React, { useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Button,\r\n  Flex,\r\n  ButtonMenu,\r\n  Checkbox,\r\n  BalanceInput,\r\n  HelpIcon,\r\n  ButtonMenuItem,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\r\nimport RoiCard from './RoiCard'\r\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\r\nimport AnimatedArrow from './AnimatedArrow'\r\n\r\ninterface RoiCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  onBack?: () => void\r\n  earningTokenPrice: number\r\n  apr: number\r\n  displayApr?: string\r\n  linkLabel: string\r\n  linkHref: string\r\n  stakingTokenBalance: BigNumber\r\n  stakingTokenSymbol: string\r\n  stakingTokenPrice: number\r\n  earningTokenSymbol?: string\r\n  multiplier?: string\r\n  autoCompoundFrequency?: number\r\n  performanceFee?: number\r\n  isFarm?: boolean\r\n  initialValue?: string\r\n}\r\n\r\nconst StyledModal = styled(Modal)`\r\n  width: 345px;\r\n  & > :nth-child(2) {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst ScrollableContainer = styled.div`\r\n  padding: 24px;\r\n  max-height: 500px;\r\n  overflow-y: auto;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    max-height: none;\r\n  }\r\n`\r\n\r\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\r\n  width: 100%;\r\n\r\n  & > button {\r\n    width: 100%;\r\n  }\r\n\r\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\r\n`\r\n\r\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\r\n  onDismiss,\r\n  onBack,\r\n  earningTokenPrice,\r\n  apr,\r\n  displayApr,\r\n  linkLabel,\r\n  linkHref,\r\n  stakingTokenBalance,\r\n  stakingTokenSymbol,\r\n  stakingTokenPrice,\r\n  multiplier,\r\n  initialValue,\r\n  earningTokenSymbol = 'CAKE',\r\n  autoCompoundFrequency = 0,\r\n  performanceFee = 0,\r\n  isFarm = false,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useActiveWeb3React()\r\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\r\n\r\n  const {\r\n    state,\r\n    setPrincipalFromUSDValue,\r\n    setPrincipalFromTokenValue,\r\n    setStakingDuration,\r\n    toggleCompounding,\r\n    toggleEditingCurrency,\r\n    setCompoundingFrequency,\r\n    setCalculatorMode,\r\n    setTargetRoi,\r\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\r\n\r\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\r\n  const { principalAsUSD, principalAsToken } = state.data\r\n\r\n  // Auto-focus input on opening modal\r\n  useEffect(() => {\r\n    if (balanceInputRef.current) {\r\n      balanceInputRef.current.focus()\r\n    }\r\n  }, [])\r\n\r\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\r\n  useEffect(() => {\r\n    if (initialValue) {\r\n      setPrincipalFromTokenValue(initialValue)\r\n    }\r\n  }, [initialValue, setPrincipalFromTokenValue])\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    isFarm\r\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\r\n      : t(\r\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\r\n          { assetSymbol: stakingTokenSymbol },\r\n        ),\r\n    { placement: 'top-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  const onBalanceFocus = () => {\r\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\r\n  }\r\n\r\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\r\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\r\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\r\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\r\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\r\n\r\n  return (\r\n    <StyledModal\r\n      title={t('ROI Calculator')}\r\n      onDismiss={onBack || onDismiss}\r\n      onBack={onBack ?? null}\r\n      headerBackground=\"gradients.cardHeader\"\r\n    >\r\n      <ScrollableContainer>\r\n        <Flex flexDirection=\"column\" mb=\"8px\">\r\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\r\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\r\n          </Text>\r\n          <BalanceInput\r\n            currencyValue={`${conversionValue} ${conversionUnit}`}\r\n            innerRef={balanceInputRef}\r\n            placeholder=\"0.00\"\r\n            value={editingValue}\r\n            unit={editingUnit}\r\n            onUserInput={onUserInput}\r\n            switchEditingUnits={toggleEditingCurrency}\r\n            onFocus={onBalanceFocus}\r\n          />\r\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\r\n            <Button\r\n              scale=\"xs\"\r\n              p=\"4px 16px\"\r\n              width=\"68px\"\r\n              variant=\"tertiary\"\r\n              onClick={() => setPrincipalFromUSDValue('100')}\r\n            >\r\n              $100\r\n            </Button>\r\n            <Button\r\n              scale=\"xs\"\r\n              p=\"4px 16px\"\r\n              width=\"68px\"\r\n              variant=\"tertiary\"\r\n              onClick={() => setPrincipalFromUSDValue('1000')}\r\n            >\r\n              $1000\r\n            </Button>\r\n            <Button\r\n              disabled={stakingTokenBalance.lte(0) || !account}\r\n              scale=\"xs\"\r\n              p=\"4px 16px\"\r\n              width=\"128px\"\r\n              variant=\"tertiary\"\r\n              onClick={() =>\r\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\r\n              }\r\n            >\r\n              {t('My Balance').toLocaleUpperCase()}\r\n            </Button>\r\n            <span ref={targetRef}>\r\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\r\n            </span>\r\n            {tooltipVisible && tooltip}\r\n          </Flex>\r\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\r\n            {t('Staked for')}\r\n          </Text>\r\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\r\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\r\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\r\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\r\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\r\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\r\n          </FullWidthButtonMenu>\r\n          {autoCompoundFrequency === 0 && (\r\n            <>\r\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\r\n                {t('Compounding every')}\r\n              </Text>\r\n              <Flex alignItems=\"center\">\r\n                <Flex flex=\"1\">\r\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\r\n                </Flex>\r\n                <Flex flex=\"6\">\r\n                  <FullWidthButtonMenu\r\n                    disabled={!compounding}\r\n                    activeIndex={activeCompoundingIndex}\r\n                    onItemClick={setCompoundingFrequency}\r\n                    scale=\"sm\"\r\n                  >\r\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\r\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\r\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\r\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\r\n                  </FullWidthButtonMenu>\r\n                </Flex>\r\n              </Flex>\r\n            </>\r\n          )}\r\n        </Flex>\r\n        <AnimatedArrow calculatorState={state} />\r\n        <Flex>\r\n          <RoiCard\r\n            earningTokenSymbol={earningTokenSymbol}\r\n            calculatorState={state}\r\n            setTargetRoi={setTargetRoi}\r\n            setCalculatorMode={setCalculatorMode}\r\n          />\r\n        </Flex>\r\n      </ScrollableContainer>\r\n      <RoiCalculatorFooter\r\n        isFarm={isFarm}\r\n        apr={apr}\r\n        displayApr={displayApr}\r\n        autoCompoundFrequency={autoCompoundFrequency}\r\n        multiplier={multiplier}\r\n        linkLabel={linkLabel}\r\n        linkHref={linkHref}\r\n        performanceFee={performanceFee}\r\n      />\r\n    </StyledModal>\r\n  )\r\n}\r\n\r\nexport default RoiCalculatorModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Text, Button, Modal, LinkExternal, CalculateIcon, IconButton } from '@pancakeswap/uikit'\r\nimport { ModalActions, ModalInput } from 'components/Modal'\r\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance, formatNumber } from 'utils/formatBalance'\r\nimport useToast from 'hooks/useToast'\r\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\r\n\r\nconst AnnualRoiContainer = styled(Flex)`\r\n  cursor: pointer;\r\n`\r\n\r\nconst AnnualRoiDisplay = styled(Text)`\r\n  width: 72px;\r\n  max-width: 72px;\r\n  overflow: hidden;\r\n  text-align: right;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  stakedBalance: BigNumber\r\n  multiplier?: string\r\n  lpPrice: BigNumber\r\n  lpLabel?: string\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  apr?: number\r\n  displayApr?: string\r\n  addLiquidityUrl?: string\r\n  cakePrice?: BigNumber\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({\r\n  max,\r\n  stakedBalance,\r\n  onConfirm,\r\n  onDismiss,\r\n  tokenName = '',\r\n  multiplier,\r\n  displayApr,\r\n  lpPrice,\r\n  lpLabel,\r\n  apr,\r\n  addLiquidityUrl,\r\n  cakePrice,\r\n}) => {\r\n  const [val, setVal] = useState('')\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\r\n  const { t } = useTranslation()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const lpTokensToStake = new BigNumber(val)\r\n  const fullBalanceNumber = new BigNumber(fullBalance)\r\n\r\n  const usdToStake = lpTokensToStake.times(lpPrice)\r\n\r\n  const interestBreakdown = getInterestBreakdown({\r\n    principalInUSD: !lpTokensToStake.isNaN() ? usdToStake.toNumber() : 0,\r\n    apr,\r\n    earningTokenPrice: cakePrice.toNumber(),\r\n  })\r\n\r\n  const annualRoi = cakePrice.times(interestBreakdown[3])\r\n  const formattedAnnualRoi = formatNumber(\r\n    annualRoi.toNumber(),\r\n    annualRoi.gt(10000) ? 0 : 2,\r\n    annualRoi.gt(10000) ? 0 : 2,\r\n  )\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      if (e.currentTarget.validity.valid) {\r\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\r\n      }\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  if (showRoiCalculator) {\r\n    return (\r\n      <RoiCalculatorModal\r\n        linkLabel={t('Get %symbol%', { symbol: lpLabel })}\r\n        stakingTokenBalance={stakedBalance.plus(max)}\r\n        stakingTokenSymbol={tokenName}\r\n        stakingTokenPrice={lpPrice.toNumber()}\r\n        earningTokenPrice={cakePrice.toNumber()}\r\n        apr={apr}\r\n        multiplier={multiplier}\r\n        displayApr={displayApr}\r\n        linkHref={addLiquidityUrl}\r\n        isFarm\r\n        initialValue={val}\r\n        onBack={() => setShowRoiCalculator(false)}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Stake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n        inputTitle={t('Stake')}\r\n      />\r\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Text mr=\"8px\" color=\"textSubtle\">\r\n          {t('Annual ROI at current rates')}:\r\n        </Text>\r\n        <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\r\n          <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\r\n          <IconButton variant=\"text\" scale=\"sm\">\r\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\r\n          </IconButton>\r\n        </AnnualRoiContainer>\r\n      </Flex>\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\r\n          {t('Cancel')}\r\n        </Button>\r\n        <Button\r\n          width=\"100%\"\r\n          disabled={\r\n            pendingTx || !lpTokensToStake.isFinite() || lpTokensToStake.eq(0) || lpTokensToStake.gt(fullBalanceNumber)\r\n          }\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            try {\r\n              await onConfirm(val)\r\n              toastSuccess(t('Staked!'), t('Your funds have been staked in the farm'))\r\n              onDismiss()\r\n            } catch (e) {\r\n              toastError(\r\n                t('Error'),\r\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\r\n              )\r\n              console.error(e)\r\n            } finally {\r\n              setPendingTx(false)\r\n            }\r\n          }}\r\n        >\r\n          {pendingTx ? t('Confirming') : t('Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\r\n        {t('Get %symbol%', { symbol: tokenName })}\r\n      </LinkExternal>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap/uikit'\r\nimport { ModalActions, ModalInput } from 'components/Modal'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useToast from 'hooks/useToast'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const valNumber = new BigNumber(val)\r\n  const fullBalanceNumber = new BigNumber(fullBalance)\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      if (e.currentTarget.validity.valid) {\r\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\r\n      }\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={t('Unstake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        inputTitle={t('Unstake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\r\n          {t('Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            try {\r\n              await onConfirm(val)\r\n              toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\r\n              onDismiss()\r\n            } catch (e) {\r\n              toastError(\r\n                t('Error'),\r\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\r\n              )\r\n              console.error(e)\r\n            } finally {\r\n              setPendingTx(false)\r\n            }\r\n          }}\r\n          width=\"100%\"\r\n        >\r\n          {pendingTx ? t('Confirming') : t('Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import { useCallback } from 'react'\r\nimport { unstakeFarm } from 'utils/calls'\r\nimport { useMasterchef } from 'hooks/useContract'\r\n\r\nconst useUnstakeFarms = (pid: number) => {\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      await unstakeFarm(masterChefContract, pid, amount)\r\n    },\r\n    [masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstakeFarms\r\n","import { useCallback } from 'react'\r\nimport { stakeFarm } from 'utils/calls'\r\nimport { useMasterchef } from 'hooks/useContract'\r\n\r\nconst useStakeFarms = (pid: number) => {\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stakeFarm(masterChefContract, pid, amount)\r\n      console.info(txHash)\r\n    },\r\n    [masterChefContract, pid],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStakeFarms\r\n","import React, { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap/uikit'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { useLpTokenPrice } from 'state/farms/hooks'\r\nimport { getBalanceAmount, getBalanceNumber } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\nimport useUnstakeFarms from '../../hooks/useUnstakeFarms'\r\nimport useStakeFarms from '../../hooks/useStakeFarms'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  multiplier?: string\r\n  apr?: number\r\n  displayApr?: string\r\n  addLiquidityUrl?: string\r\n  cakePrice?: BigNumber\r\n  lpLabel?: string\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  multiplier,\r\n  apr,\r\n  displayApr,\r\n  addLiquidityUrl,\r\n  cakePrice,\r\n  lpLabel,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { onStake } = useStakeFarms(pid)\r\n  const { onUnstake } = useUnstakeFarms(pid)\r\n  const location = useLocation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const lpPrice = useLpTokenPrice(tokenName)\r\n\r\n  const handleStake = async (amount: string) => {\r\n    await onStake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const handleUnstake = async (amount: string) => {\r\n    await onUnstake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const displayBalance = useCallback(() => {\r\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\r\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\r\n      return '<0.0000001'\r\n    }\r\n    if (stakedBalanceBigNumber.gt(0)) {\r\n      return stakedBalanceBigNumber.toFixed(8, BigNumber.ROUND_DOWN)\r\n    }\r\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\r\n  }, [stakedBalance])\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      max={tokenBalance}\r\n      stakedBalance={stakedBalance}\r\n      onConfirm={handleStake}\r\n      tokenName={tokenName}\r\n      multiplier={multiplier}\r\n      lpPrice={lpPrice}\r\n      lpLabel={lpLabel}\r\n      apr={apr}\r\n      displayApr={displayApr}\r\n      addLiquidityUrl={addLiquidityUrl}\r\n      cakePrice={cakePrice}\r\n    />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return stakedBalance.eq(0) ? (\r\n      <Button\r\n        onClick={onPresentDeposit}\r\n        disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n      >\r\n        {t('Stake LP')}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n        <IconButton\r\n          variant=\"tertiary\"\r\n          onClick={onPresentDeposit}\r\n          disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n        >\r\n          <AddIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\r\n        <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading>\r\n        {stakedBalance.gt(0) && lpPrice.gt(0) && (\r\n          <Balance\r\n            fontSize=\"12px\"\r\n            color=\"textSubtle\"\r\n            decimals={2}\r\n            value={getBalanceNumber(lpPrice.times(stakedBalance))}\r\n            unit=\" USD\"\r\n            prefix=\"~\"\r\n          />\r\n        )}\r\n      </Flex>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import { useCallback } from 'react'\r\nimport { harvestFarm } from 'utils/calls'\r\nimport { useMasterchef } from 'hooks/useContract'\r\n\r\nconst useHarvestFarm = (farmPid: number) => {\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    await harvestFarm(masterChefContract, farmPid)\r\n  }, [farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport default useHarvestFarm\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport useToast from 'hooks/useToast'\r\nimport { getBalanceAmount } from 'utils/formatBalance'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport Balance from 'components/Balance'\r\nimport useHarvestFarm from '../../hooks/useHarvestFarm'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n}\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\r\n  const { account } = useWeb3React()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { t } = useTranslation()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvestFarm(pid)\r\n  const cakePrice = usePriceCakeBusd()\r\n  const dispatch = useAppDispatch()\r\n  const rawEarningsBalance = account ? getBalanceAmount(earnings) : BIG_ZERO\r\n  const displayBalance = rawEarningsBalance.toFixed(3, BigNumber.ROUND_DOWN)\r\n  const earningsBusd = rawEarningsBalance ? rawEarningsBalance.multipliedBy(cakePrice).toNumber() : 0\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\r\n        <Heading color={rawEarningsBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n        {earningsBusd > 0 && (\r\n          <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\r\n        )}\r\n      </Flex>\r\n      <Button\r\n        disabled={rawEarningsBalance.eq(0) || pendingTx}\r\n        onClick={async () => {\r\n          setPendingTx(true)\r\n          try {\r\n            await onReward()\r\n            toastSuccess(\r\n              `${t('Harvested')}!`,\r\n              t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' }),\r\n            )\r\n          } catch (e) {\r\n            toastError(\r\n              t('Error'),\r\n              t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\r\n            )\r\n            console.error(e)\r\n          } finally {\r\n            setPendingTx(false)\r\n          }\r\n          dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n        }}\r\n      >\r\n        {pendingTx ? t('Harvesting') : t('Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import { useCallback } from 'react'\r\nimport { ethers, Contract } from 'ethers'\r\nimport { useMasterchef } from 'hooks/useContract'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\n\r\nconst useApproveFarm = (lpContract: Contract) => {\r\n  const masterChefContract = useMasterchef()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await callWithGasPrice(lpContract, 'approve', [\r\n        masterChefContract.address,\r\n        ethers.constants.MaxUint256,\r\n      ])\r\n      const receipt = await tx.wait()\r\n      return receipt.status\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [lpContract, masterChefContract, callWithGasPrice])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\nexport default useApproveFarm\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Text } from '@pancakeswap/uikit'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { DeserializedFarm } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\nimport useApproveFarm from '../../hooks/useApproveFarm'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends DeserializedFarm {\r\n  apr?: number\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  account?: string\r\n  addLiquidityUrl?: string\r\n  cakePrice?: BigNumber\r\n  lpLabel?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl, cakePrice, lpLabel }) => {\r\n  const { t } = useTranslation()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, token, isTokenOnly } = farm\r\n  const { allowance, tokenBalance, stakedBalance, earnings } = farm.userData || {}\r\n  console.log(farm.userData)\r\n  const lpAddress = isTokenOnly ? token.address : getAddress(lpAddresses)\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n  const dispatch = useAppDispatch()\r\n\r\n  const lpContract = useERC20(lpAddress)\r\n\r\n  const { onApprove } = useApproveFarm(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, dispatch, account, pid])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={farm.lpSymbol}\r\n        pid={pid}\r\n        apr={farm.apr}\r\n        lpLabel={lpLabel}\r\n        cakePrice={cakePrice}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n    ) : (\r\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\r\n        {t('Enable Contract')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\r\n          UBUT\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} />\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\r\n          {farm.lpSymbol}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <ConnectWalletButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Flex, IconButton, useModal, CalculateIcon } from '@pancakeswap/uikit'\r\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useFarmUser, useLpTokenPrice } from 'state/farms/hooks'\r\n\r\nconst ApyLabelContainer = styled(Flex)`\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`\r\n\r\nexport interface ApyButtonProps {\r\n  variant: 'text' | 'text-and-button'\r\n  pid: number\r\n  lpSymbol: string\r\n  lpLabel?: string\r\n  multiplier: string\r\n  cakePrice?: BigNumber\r\n  apr?: number\r\n  displayApr?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({\r\n  variant,\r\n  pid,\r\n  lpLabel,\r\n  lpSymbol,\r\n  cakePrice,\r\n  apr,\r\n  multiplier,\r\n  displayApr,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const lpPrice = useLpTokenPrice(lpSymbol)\r\n  const { tokenBalance, stakedBalance } = useFarmUser(pid)\r\n  const [onPresentApyModal] = useModal(\r\n    <RoiCalculatorModal\r\n      linkLabel={t('Get %symbol%', { symbol: lpLabel })}\r\n      stakingTokenBalance={stakedBalance.plus(tokenBalance)}\r\n      stakingTokenSymbol={lpSymbol}\r\n      stakingTokenPrice={lpPrice.toNumber()}\r\n      earningTokenPrice={cakePrice.toNumber()}\r\n      apr={apr}\r\n      multiplier={multiplier}\r\n      displayApr={displayApr}\r\n      linkHref={addLiquidityUrl}\r\n      isFarm\r\n    />,\r\n  )\r\n\r\n  const handleClickButton = (event): void => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <ApyLabelContainer alignItems=\"center\" onClick={handleClickButton}>\r\n      {displayApr}%\r\n      {variant === 'text-and-button' && (\r\n        <IconButton variant=\"text\" scale=\"sm\" ml=\"4px\">\r\n          <CalculateIcon width=\"18px\" />\r\n        </IconButton>\r\n      )}\r\n    </ApyLabelContainer>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Card, Flex, Text, Skeleton } from '@pancakeswap/uikit'\r\nimport { DeserializedFarm } from 'state/types'\r\nimport { getBscScanLink } from 'utils'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { BASE_ADD_LIQUIDITY_URL, BASE_URL } from 'config'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends DeserializedFarm {\r\n  apr?: number\r\n  lpRewardsApr?: number\r\n  liquidity?: BigNumber\r\n}\r\n\r\nconst StyledCard = styled(Card)`\r\n  align-self: baseline;\r\n`\r\n\r\nconst FarmCardInnerContainer = styled(Flex)`\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div`\r\n  padding: 24px;\r\n  border-top: 2px solid ${({ theme }) => theme.colors.cardBorder};\r\n  overflow: hidden;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  displayApr: string\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  account?: string\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, displayApr, removed, cakePrice, account }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  const totalValueFormatted =\r\n    farm.liquidity && farm.liquidity.gt(0)\r\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n      : ''\r\n\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\r\n  const earnLabel = farm.dual ? farm.dual.earnLabel : t('UBUNTU + Fees')\r\n\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAddress: farm.quoteToken.address,\r\n    tokenAddress: farm.token.address,\r\n  })\r\n  let addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n  if(farm.isTokenOnly){\r\n    addLiquidityUrl = `${BASE_URL}/swap?outputCurrency=${farm.token.address}`\r\n  }\r\n  const lpAddress = getAddress(farm.lpAddresses)\r\n  const isPromotedFarm = farm.token.symbol === 'UBUT'\r\n  const depositFee = farm.depositFeeBP\r\n  console.log('depositFee', farm);\r\n  return (\r\n    <StyledCard isActive={isPromotedFarm}>\r\n      <FarmCardInnerContainer>\r\n        <CardHeading\r\n          lpLabel={lpLabel}\r\n          multiplier={farm.multiplier}\r\n          token={farm.token}\r\n          quoteToken={farm.quoteToken}\r\n          isTokenOnly={farm.isTokenOnly}\r\n        />\r\n        {!removed && (\r\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Text>{t('APR')}:</Text>\r\n            <Text bold style={{ display: 'flex', alignItems: 'center' }}>\r\n              {farm.apr ? (\r\n                <ApyButton\r\n                  variant=\"text-and-button\"\r\n                  pid={farm.pid}\r\n                  lpSymbol={farm.lpSymbol}\r\n                  multiplier={farm.multiplier}\r\n                  lpLabel={lpLabel}\r\n                  addLiquidityUrl={addLiquidityUrl}\r\n                  cakePrice={cakePrice}\r\n                  apr={farm.apr}\r\n                  displayApr={displayApr}\r\n                />\r\n              ) : (\r\n                <Skeleton height={24} width={80} />\r\n              )}\r\n            </Text>\r\n          </Flex>\r\n        )}\r\n        <Flex justifyContent=\"space-between\">\r\n          <Text>{t('Earn')}:</Text>\r\n          <Text bold>{earnLabel}</Text>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\">\r\n          <Text>{t('Deposit Fee')}:</Text>\r\n          <Text bold>{depositFee}%</Text>\r\n        </Flex>\r\n        <CardActionsContainer\r\n          farm={farm}\r\n          lpLabel={lpLabel}\r\n          account={account}\r\n          cakePrice={cakePrice}\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      </FarmCardInnerContainer>\r\n\r\n      <ExpandingWrapper>\r\n        <ExpandableSectionButton\r\n          onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n          expanded={showExpandableSection}\r\n        />\r\n        {showExpandableSection && (\r\n          <DetailsSection\r\n            removed={removed}\r\n            bscScanAddress={getBscScanLink(lpAddress, 'address')}\r\n            infoAddress={`/info/pool/${lpAddress}`}\r\n            totalValueFormatted={totalValueFormatted}\r\n            lpLabel={lpLabel}\r\n            addLiquidityUrl={addLiquidityUrl}\r\n          />\r\n        )}\r\n      </ExpandingWrapper>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","import { useState, useEffect } from 'react'\r\n\r\n/**\r\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\r\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\r\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\r\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\r\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\r\n * This hook \"shows\" element immediately when the isMounted is true\r\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\r\n * delayTime should be the same as animation time in most cases.\r\n */\r\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\r\n  const [shouldRender, setShouldRender] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let timeoutId: ReturnType<typeof setTimeout>\r\n    if (isMounted && !shouldRender) {\r\n      setShouldRender(true)\r\n    } else if (!isMounted && shouldRender) {\r\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\r\n    }\r\n    return () => clearTimeout(timeoutId)\r\n  }, [isMounted, delayTime, shouldRender])\r\n  return shouldRender\r\n}\r\n\r\nexport default useDelayedUnmount\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { Skeleton } from '@pancakeswap/uikit'\r\n\r\nexport interface AprProps {\r\n  value: string\r\n  multiplier: string\r\n  pid: number\r\n  lpLabel: string\r\n  lpSymbol: string\r\n  tokenAddress?: string\r\n  quoteTokenAddress?: string\r\n  cakePrice: BigNumber\r\n  originalValue: number\r\n  hideButton?: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n\r\n  button {\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    svg {\r\n      path {\r\n        fill: ${({ theme }) => theme.colors.textSubtle};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst AprWrapper = styled.div`\r\n  min-width: 60px;\r\n  text-align: left;\r\n`\r\n\r\nconst Apr: React.FC<AprProps> = ({\r\n  value,\r\n  pid,\r\n  lpLabel,\r\n  lpSymbol,\r\n  multiplier,\r\n  tokenAddress,\r\n  quoteTokenAddress,\r\n  cakePrice,\r\n  originalValue,\r\n  hideButton = false,\r\n}) => {\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAddress, tokenAddress })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n\r\n  return originalValue !== 0 ? (\r\n    <Container>\r\n      {originalValue ? (\r\n        <ApyButton\r\n          variant={hideButton ? 'text' : 'text-and-button'}\r\n          pid={pid}\r\n          lpSymbol={lpSymbol}\r\n          lpLabel={lpLabel}\r\n          multiplier={multiplier}\r\n          cakePrice={cakePrice}\r\n          apr={originalValue}\r\n          displayApr={value}\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      ) : (\r\n        <AprWrapper>\r\n          <Skeleton width={60} />\r\n        </AprWrapper>\r\n      )}\r\n    </Container>\r\n  ) : (\r\n    <Container>\r\n      <AprWrapper>{originalValue}%</AprWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Apr\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useFarmUser } from 'state/farms/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Text, Image } from '@pancakeswap/uikit'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { TokenPairImage } from 'components/TokenImage'\r\n\r\nexport interface FarmProps {\r\n  label: string\r\n  pid: number\r\n  token: Token\r\n  quoteToken: Token\r\n  isTokenOnly: boolean\r\n  depositFeeBP: number\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding-left: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst TokenWrapper = styled.div`\r\n  padding-right: 8px;\r\n  width: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: 40px;\r\n  }\r\n`\r\n\r\nconst Farm: React.FunctionComponent<FarmProps> = ({ token, quoteToken, label, pid, isTokenOnly }) => {\r\n  const { stakedBalance } = useFarmUser(pid)\r\n  const { t } = useTranslation()\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n\r\n  const handleRenderFarming = (): JSX.Element => {\r\n    if (rawStakedBalance) {\r\n      return (\r\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\r\n          {t('Farming')}\r\n        </Text>\r\n      )\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  let image = `/images/tokens/${token.address}.svg`\r\n  if(isTokenOnly)\r\n    image = `/images/tokens/${token.address}.png`\r\n\r\n  return (\r\n    <Container>\r\n      <TokenWrapper>\r\n        {\r\n          isTokenOnly?\r\n          <Image src={image} width={64} height={64} alt=\"Token Image\" /> : \r\n          <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={40} height={40} />\r\n        }\r\n      </TokenWrapper>\r\n      <div>\r\n        {handleRenderFarming()}\r\n        <Text bold>{label}</Text>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Farm\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Skeleton } from '@pancakeswap/uikit'\r\n\r\nexport interface EarnedProps {\r\n  earnings: number\r\n  pid: number\r\n}\r\n\r\ninterface EarnedPropsWithLoading extends EarnedProps {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst Amount = styled.span<{ earned: number }>`\r\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\r\n  if (userDataReady) {\r\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\r\n  }\r\n  return (\r\n    <Amount earned={0}>\r\n      <Skeleton width={60} />\r\n    </Amount>\r\n  )\r\n}\r\n\r\nexport default Earned\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface DetailsProps {\r\n  actionPanelToggled: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n  padding-right: 8px;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 0px;\r\n  }\r\n`\r\n\r\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\r\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\r\n  height: 20px;\r\n`\r\n\r\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\r\n  const { t } = useTranslation()\r\n  const { isDesktop } = useMatchBreakpoints()\r\n\r\n  return (\r\n    <Container>\r\n      {!isDesktop && t('Details')}\r\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Details\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, HelpIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nexport interface MultiplierProps {\r\n  multiplier: string\r\n}\r\n\r\nconst MultiplierWrapper = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  width: 36px;\r\n  text-align: right;\r\n  margin-right: 14px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    text-align: left;\r\n    margin-right: 0;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\r\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\r\n  const { t } = useTranslation()\r\n  const tooltipContent = (\r\n    <>\r\n      <Text>\r\n        {t(\r\n          'The Multiplier represents the proportion of UBUT rewards each farm receives, as a proportion of the UBUT produced each block.',\r\n        )}\r\n      </Text>\r\n      <Text my=\"24px\">\r\n        {t('For example, if a 1x farm received 1 UBUT per block, a 40x farm would receive 40 UBUT per block.')}\r\n      </Text>\r\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\r\n    </>\r\n  )\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\r\n    placement: 'top-end',\r\n    tooltipOffset: [20, 10],\r\n  })\r\n\r\n  return (\r\n    <Container>\r\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\r\n      <ReferenceElement ref={targetRef}>\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </ReferenceElement>\r\n      {tooltipVisible && tooltip}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Multiplier\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nexport interface LiquidityProps {\r\n  liquidity: BigNumber\r\n}\r\n\r\nconst LiquidityWrapper = styled.div`\r\n  min-width: 110px;\r\n  font-weight: 600;\r\n  text-align: right;\r\n  margin-right: 14px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    text-align: left;\r\n    margin-right: 0;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\r\n  const displayLiquidity =\r\n    liquidity && liquidity.gt(0) ? (\r\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    ) : (\r\n      <Skeleton width={60} />\r\n    )\r\n  const { t } = useTranslation()\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Total value of the funds in this farm’s liquidity pool'),\r\n    { placement: 'top-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <LiquidityWrapper>\r\n        <Text>{displayLiquidity}</Text>\r\n      </LiquidityWrapper>\r\n      <ReferenceElement ref={targetRef}>\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </ReferenceElement>\r\n      {tooltipVisible && tooltip}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Liquidity\r\n","import styled from 'styled-components'\r\n\r\nexport const ActionContainer = styled.div`\r\n  padding: 16px;\r\n  border: 2px solid ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  margin-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 12px;\r\n    margin-right: 12px;\r\n    margin-bottom: 0;\r\n    max-height: 100px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    margin-left: 48px;\r\n    margin-right: 0;\r\n    margin-bottom: 0;\r\n    max-height: 100px;\r\n  }\r\n`\r\n\r\nexport const ActionTitles = styled.div`\r\n  display: flex;\r\n`\r\n\r\nexport const ActionContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n","import React, { useState } from 'react'\r\nimport { Button, Heading, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport Balance from 'components/Balance'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getBalanceAmount } from 'utils/formatBalance'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useHarvestFarm from '../../../hooks/useHarvestFarm'\r\n\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\n\r\ninterface HarvestActionProps extends FarmWithStakedValue {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({ pid, userData, userDataReady }) => {\r\n  const { toastSuccess, toastError } = useToast()\r\n  const earningsBigNumber = new BigNumber(userData.earnings)\r\n  const cakePrice = usePriceCakeBusd()\r\n  let earnings = BIG_ZERO\r\n  let earningsBusd = 0\r\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\r\n\r\n  // If user didn't connect wallet default balance will be 0\r\n  if (!earningsBigNumber.isZero()) {\r\n    earnings = getBalanceAmount(earningsBigNumber)\r\n    earningsBusd = earnings.multipliedBy(cakePrice).toNumber()\r\n    displayBalance = earnings.toFixed(3, BigNumber.ROUND_DOWN)\r\n  }\r\n\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvestFarm(pid)\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\r\n          UBUT\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Earned')}\r\n        </Text>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <div>\r\n          <Heading>{displayBalance}</Heading>\r\n          {earningsBusd > 0 && (\r\n            <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\r\n          )}\r\n        </div>\r\n        <Button\r\n          disabled={earnings.eq(0) || pendingTx || !userDataReady}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            try {\r\n              await onReward()\r\n              toastSuccess(\r\n                `${t('Harvested')}!`,\r\n                t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' }),\r\n              )\r\n            } catch (e) {\r\n              toastError(\r\n                t('Error'),\r\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\r\n              )\r\n              console.error(e)\r\n            } finally {\r\n              setPendingTx(false)\r\n            }\r\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n          }}\r\n          ml=\"4px\"\r\n        >\r\n          {pendingTx ? t('Harvesting') : t('Harvest')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, Text, Heading } from '@pancakeswap/uikit'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport Balance from 'components/Balance'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useFarmUser, useLpTokenPrice, usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport { useAppDispatch } from 'state'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useUnstakeFarms from '../../../hooks/useUnstakeFarms'\r\nimport DepositModal from '../../DepositModal'\r\nimport WithdrawModal from '../../WithdrawModal'\r\nimport useStakeFarms from '../../../hooks/useStakeFarms'\r\nimport useApproveFarm from '../../../hooks/useApproveFarm'\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\ninterface StackedActionProps extends FarmWithStakedValue {\r\n  userDataReady: boolean\r\n  lpLabel?: string\r\n  displayApr?: string\r\n}\r\n\r\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\r\n  pid,\r\n  apr,\r\n  multiplier,\r\n  lpSymbol,\r\n  lpLabel,\r\n  lpAddresses,\r\n  quoteToken,\r\n  token,\r\n  userDataReady,\r\n  displayApr,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\r\n  const { onStake } = useStakeFarms(pid)\r\n  const { onUnstake } = useUnstakeFarms(pid)\r\n  const location = useLocation()\r\n  const lpPrice = useLpTokenPrice(lpSymbol)\r\n  const cakePrice = usePriceCakeBusd()\r\n\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAddress: quoteToken.address,\r\n    tokenAddress: token.address,\r\n  })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n\r\n  const handleStake = async (amount: string) => {\r\n    await onStake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const handleUnstake = async (amount: string) => {\r\n    await onUnstake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const displayBalance = useCallback(() => {\r\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\r\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\r\n      return stakedBalanceBigNumber.toFixed(10, BigNumber.ROUND_DOWN)\r\n    }\r\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\r\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\r\n    }\r\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\r\n  }, [stakedBalance])\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      max={tokenBalance}\r\n      lpPrice={lpPrice}\r\n      lpLabel={lpLabel}\r\n      apr={apr}\r\n      displayApr={displayApr}\r\n      stakedBalance={stakedBalance}\r\n      onConfirm={handleStake}\r\n      tokenName={lpSymbol}\r\n      multiplier={multiplier}\r\n      addLiquidityUrl={addLiquidityUrl}\r\n      cakePrice={cakePrice}\r\n    />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={lpSymbol} />,\r\n  )\r\n  const lpContract = useERC20(lpAddress)\r\n  const dispatch = useAppDispatch()\r\n  const { onApprove } = useApproveFarm(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, dispatch, account, pid])\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n            {t('Start Farming')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <ConnectWalletButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (isApproved) {\r\n    if (stakedBalance.gt(0)) {\r\n      return (\r\n        <ActionContainer>\r\n          <ActionTitles>\r\n            <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\r\n              {lpSymbol}\r\n            </Text>\r\n            <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n              {t('Staked')}\r\n            </Text>\r\n          </ActionTitles>\r\n          <ActionContent>\r\n            <div>\r\n              <Heading>{displayBalance()}</Heading>\r\n              {stakedBalance.gt(0) && lpPrice.gt(0) && (\r\n                <Balance\r\n                  fontSize=\"12px\"\r\n                  color=\"textSubtle\"\r\n                  decimals={2}\r\n                  value={getBalanceNumber(lpPrice.times(stakedBalance))}\r\n                  unit=\" USD\"\r\n                  prefix=\"~\"\r\n                />\r\n              )}\r\n            </div>\r\n            <IconButtonWrapper>\r\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n                <MinusIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n              <IconButton\r\n                variant=\"secondary\"\r\n                onClick={onPresentDeposit}\r\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n              >\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            </IconButtonWrapper>\r\n          </ActionContent>\r\n        </ActionContainer>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\r\n            {t('Stake').toUpperCase()}\r\n          </Text>\r\n          <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\r\n            {lpSymbol}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button\r\n            width=\"100%\"\r\n            onClick={onPresentDeposit}\r\n            variant=\"secondary\"\r\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n          >\r\n            {t('Stake LP')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataReady) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n            {t('Start Farming')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Enable Farm')}\r\n        </Text>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\r\n          {t('Enable')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n","import React from 'react'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { LinkExternal, Text } from '@pancakeswap/uikit'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { getBscScanLink } from 'utils'\r\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\r\n\r\nimport HarvestAction from './HarvestAction'\r\nimport StakedAction from './StakedAction'\r\nimport Apr, { AprProps } from '../Apr'\r\nimport Multiplier, { MultiplierProps } from '../Multiplier'\r\nimport Liquidity, { LiquidityProps } from '../Liquidity'\r\n\r\nexport interface ActionPanelProps {\r\n  apr: AprProps\r\n  multiplier: MultiplierProps\r\n  liquidity: LiquidityProps\r\n  details: FarmWithStakedValue\r\n  userDataReady: boolean\r\n  expanded: boolean\r\n}\r\n\r\nconst expandAnimation = keyframes`\r\n  from {\r\n    max-height: 0px;\r\n  }\r\n  to {\r\n    max-height: 500px;\r\n  }\r\n`\r\n\r\nconst collapseAnimation = keyframes`\r\n  from {\r\n    max-height: 500px;\r\n  }\r\n  to {\r\n    max-height: 0px;\r\n  }\r\n`\r\n\r\nconst Container = styled.div<{ expanded }>`\r\n  animation: ${({ expanded }) =>\r\n    expanded\r\n      ? css`\r\n          ${expandAnimation} 300ms linear forwards\r\n        `\r\n      : css`\r\n          ${collapseAnimation} 300ms linear forwards\r\n        `};\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.background};\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column-reverse;\r\n  padding: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    flex-direction: row;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  font-weight: 400;\r\n`\r\n\r\nconst StakeContainer = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n  }\r\n`\r\n\r\nconst TagsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 25px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 16px;\r\n  }\r\n\r\n  > div {\r\n    height: 24px;\r\n    padding: 0 6px;\r\n    font-size: 14px;\r\n    margin-right: 4px;\r\n\r\n    svg {\r\n      width: 14px;\r\n    }\r\n  }\r\n`\r\n\r\nconst ActionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n  }\r\n`\r\n\r\nconst InfoContainer = styled.div`\r\n  min-width: 200px;\r\n`\r\n\r\nconst ValueContainer = styled.div`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst ValueWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 4px 0px;\r\n`\r\n\r\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\r\n  details,\r\n  apr,\r\n  multiplier,\r\n  liquidity,\r\n  userDataReady,\r\n  expanded,\r\n}) => {\r\n  const farm = details\r\n\r\n  const { t } = useTranslation()\r\n  const isActive = farm.multiplier !== '0X'\r\n  const { quoteToken, token, dual } = farm\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAddress: quoteToken.address,\r\n    tokenAddress: token.address,\r\n  })\r\n  const lpAddress = getAddress(farm.lpAddresses)\r\n  const bsc = getBscScanLink(lpAddress, 'address')\r\n  const info = `/info/pool/${lpAddress}`\r\n\r\n  return (\r\n    <Container expanded={expanded}>\r\n      <InfoContainer>\r\n        {isActive && (\r\n          <StakeContainer>\r\n            <StyledLinkExternal href={`/add/${liquidityUrlPathParts}`}>\r\n              {t('Get %symbol%', { symbol: lpLabel })}\r\n            </StyledLinkExternal>\r\n          </StakeContainer>\r\n        )}\r\n        <StyledLinkExternal href={bsc}>{t('View Contract')}</StyledLinkExternal>\r\n        <StyledLinkExternal href={info}>{t('See Pair Info')}</StyledLinkExternal>\r\n        \r\n      </InfoContainer>\r\n      <ValueContainer>\r\n        <ValueWrapper>\r\n          <Text>{t('APR')}</Text>\r\n          <Apr {...apr} />\r\n        </ValueWrapper>\r\n        <ValueWrapper>\r\n          <Text>{t('Multiplier')}</Text>\r\n          <Multiplier {...multiplier} />\r\n        </ValueWrapper>\r\n        <ValueWrapper>\r\n          <Text>{t('Liquidity')}</Text>\r\n          <Liquidity {...liquidity} />\r\n        </ValueWrapper>\r\n      </ValueContainer>\r\n      <ActionContainer>\r\n        <HarvestAction {...farm} userDataReady={userDataReady} />\r\n        <StakedAction {...farm} userDataReady={userDataReady} lpLabel={lpLabel} displayApr={apr.value} />\r\n      </ActionContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ActionPanel\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Label = styled.div`\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  text-align: left;\r\n`\r\n\r\nconst ContentContainer = styled.div`\r\n  min-height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\ninterface CellLayoutProps {\r\n  label?: string\r\n}\r\n\r\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\r\n  return (\r\n    <div>\r\n      {label && <Label>{label}</Label>}\r\n      <ContentContainer>{children}</ContentContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CellLayout\r\n","export type TableProps = {\r\n  data?: TableDataTypes[]\r\n  selectedFilters?: string\r\n  sortBy?: string\r\n  sortDir?: string\r\n  onSort?: (value: string) => void\r\n}\r\n\r\nexport type ColumnsDefTypes = {\r\n  id: number\r\n  label: string\r\n  name: string\r\n  sortable: boolean\r\n}\r\n\r\nexport type ScrollBarProps = {\r\n  ref: string\r\n  width: number\r\n}\r\n\r\nexport type TableDataTypes = {\r\n  POOL: string\r\n  APR: string\r\n  EARNED: string\r\n  STAKED: string\r\n  DETAILS: string\r\n  LINKS: string\r\n}\r\n\r\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'liquidity',\r\n    sortable: true,\r\n    label: 'Liquidity',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'multiplier',\r\n    sortable: true,\r\n    label: 'Multiplier',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\r\nimport { useFarmUser } from 'state/farms/hooks'\r\n\r\nimport Apr, { AprProps } from './Apr'\r\nimport Farm, { FarmProps } from './Farm'\r\nimport Earned, { EarnedProps } from './Earned'\r\nimport Details from './Details'\r\nimport Multiplier, { MultiplierProps } from './Multiplier'\r\nimport Liquidity, { LiquidityProps } from './Liquidity'\r\nimport ActionPanel from './Actions/ActionPanel'\r\nimport CellLayout from './CellLayout'\r\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\r\n\r\nexport interface RowProps {\r\n  apr: AprProps\r\n  farm: FarmProps\r\n  earned: EarnedProps\r\n  multiplier: MultiplierProps\r\n  liquidity: LiquidityProps\r\n  details: FarmWithStakedValue\r\n}\r\n\r\ninterface RowPropsWithLoading extends RowProps {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst cells = {\r\n  apr: Apr,\r\n  farm: Farm,\r\n  earned: Earned,\r\n  details: Details,\r\n  multiplier: Multiplier,\r\n  liquidity: Liquidity,\r\n}\r\n\r\nconst CellInner = styled.div`\r\n  padding: 24px 0px;\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  padding-right: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst StyledTr = styled.tr`\r\n  cursor: pointer;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\r\n`\r\n\r\nconst EarnedMobileCell = styled.td`\r\n  padding: 16px 0 24px 16px;\r\n`\r\n\r\nconst AprMobileCell = styled.td`\r\n  padding-top: 16px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst FarmMobileCell = styled.td`\r\n  padding-top: 24px;\r\n`\r\n\r\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\r\n  const { details, userDataReady } = props\r\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\r\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\r\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\r\n  const { t } = useTranslation()\r\n\r\n  const toggleActionPanel = () => {\r\n    setActionPanelExpanded(!actionPanelExpanded)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setActionPanelExpanded(hasStakedAmount)\r\n  }, [hasStakedAmount])\r\n\r\n  const { isDesktop, isMobile } = useMatchBreakpoints()\r\n\r\n  const isSmallerScreen = !isDesktop\r\n  const tableSchema = isSmallerScreen ? MobileColumnSchema : DesktopColumnSchema\r\n  const columnNames = tableSchema.map((column) => column.name)\r\n\r\n  const handleRenderRow = () => {\r\n    if (!isMobile) {\r\n      return (\r\n        <StyledTr onClick={toggleActionPanel}>\r\n          {Object.keys(props).map((key) => {\r\n            const columnIndex = columnNames.indexOf(key)\r\n            if (columnIndex === -1) {\r\n              return null\r\n            }\r\n\r\n            switch (key) {\r\n              case 'details':\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout>\r\n                        <Details actionPanelToggled={actionPanelExpanded} />\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n              case 'apr':\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout label={t('APR')}>\r\n                        <Apr {...props.apr} hideButton={isSmallerScreen} />\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n              default:\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\r\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n            }\r\n          })}\r\n        </StyledTr>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <StyledTr onClick={toggleActionPanel}>\r\n        <td>\r\n          <tr>\r\n            <FarmMobileCell>\r\n              <CellLayout>\r\n              <Farm {...props.farm} isTokenOnly={props.details.isTokenOnly}/>\r\n              </CellLayout>\r\n            </FarmMobileCell>\r\n          </tr>\r\n          <tr>\r\n            <EarnedMobileCell>\r\n              <CellLayout label={t('Earned')}>\r\n                <Earned {...props.earned} userDataReady={userDataReady} />\r\n              </CellLayout>\r\n            </EarnedMobileCell>\r\n            <AprMobileCell>\r\n              <CellLayout label={t('APR')}>\r\n                <Apr {...props.apr} hideButton />\r\n              </CellLayout>\r\n            </AprMobileCell>\r\n          </tr>\r\n        </td>\r\n        <td>\r\n          <CellInner>\r\n            <CellLayout>\r\n              <Details actionPanelToggled={actionPanelExpanded} />\r\n            </CellLayout>\r\n          </CellInner>\r\n        </td>\r\n      </StyledTr>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {handleRenderRow()}\r\n      {shouldRenderChild && (\r\n        <tr>\r\n          <td colSpan={6}>\r\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\r\n          </td>\r\n        </tr>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Row\r\n","import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nimport Row, { RowProps } from './Row'\r\n\r\nexport interface ITableProps {\r\n  data: RowProps[]\r\n  columns: ColumnType<RowProps>[]\r\n  userDataReady: boolean\r\n  sortColumn?: string\r\n}\r\n\r\nconst Container = styled.div`\r\n  filter: ${({ theme }) => theme.card.dropShadow};\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.card.background};\r\n  border-radius: 16px;\r\n  margin: 16px 0px;\r\n`\r\n\r\nconst TableWrapper = styled.div`\r\n  overflow: visible;\r\n  scroll-margin-top: 64px;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst StyledTable = styled.table`\r\n  border-collapse: collapse;\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n`\r\n\r\nconst TableBody = styled.tbody`\r\n  & tr {\r\n    td {\r\n      font-size: 16px;\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n`\r\n\r\nconst TableContainer = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst FarmTable: React.FC<ITableProps> = (props) => {\r\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\r\n  const { t } = useTranslation()\r\n  const { data, columns, userDataReady } = props\r\n\r\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\r\n\r\n  const scrollToTop = (): void => {\r\n    tableWrapperEl.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container id=\"farms-table\">\r\n      <TableContainer>\r\n        <TableWrapper ref={tableWrapperEl}>\r\n          <StyledTable>\r\n            <TableBody>\r\n              {rows.map((row) => {\r\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\r\n              })}\r\n            </TableBody>\r\n          </StyledTable>\r\n        </TableWrapper>\r\n        <ScrollButtonContainer>\r\n          <Button variant=\"text\" onClick={scrollToTop}>\r\n            {t('To Top')}\r\n            <ChevronUpIcon color=\"primary\" />\r\n          </Button>\r\n        </ScrollButtonContainer>\r\n      </TableContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FarmTable\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useLocation, Link, useRouteMatch } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface FarmTabButtonsProps {\r\n  hasStakeInFinishedFarms: boolean\r\n}\r\n\r\nconst FarmTabButtons: React.FC<FarmTabButtonsProps> = ({ hasStakeInFinishedFarms }) => {\r\n  const { url } = useRouteMatch()\r\n  const location = useLocation()\r\n  const { t } = useTranslation()\r\n\r\n  let activeIndex\r\n  switch (location.pathname) {\r\n    case '/farms':\r\n      activeIndex = 0\r\n      break\r\n    case '/farms/history':\r\n      activeIndex = 1\r\n      break\r\n    case '/farms/archived':\r\n      activeIndex = 2\r\n      break\r\n    default:\r\n      activeIndex = 0\r\n      break\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          {t('Live')}\r\n        </ButtonMenuItem>\r\n        <NotificationDot show={hasStakeInFinishedFarms}>\r\n          <ButtonMenuItem id=\"finished-farms-button\" as={Link} to={`${url}/history`}>\r\n            {t('Finished')}\r\n          </ButtonMenuItem>\r\n        </NotificationDot>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FarmTabButtons\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  a {\r\n    padding-left: 12px;\r\n    padding-right: 12px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 16px;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\r\nimport { ViewMode } from 'state/user/actions'\r\n\r\ninterface ToggleViewProps {\r\n  viewMode: ViewMode\r\n  onToggle: (mode: ViewMode) => void\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-left: -8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 0;\r\n  }\r\n`\r\n\r\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\r\n  const handleToggle = (mode: ViewMode) => {\r\n    if (viewMode !== mode) {\r\n      onToggle(mode)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\r\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\r\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ToggleView\r\n","import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\r\nimport { Route, useRouteMatch, useLocation, NavLink } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Image, Heading, RowType, Toggle, Text, Button, ArrowForwardIcon, Flex } from '@pancakeswap/uikit'\r\nimport { ChainId } from '@pancakeswap/sdk'\r\nimport styled from 'styled-components'\r\nimport FlexLayout from 'components/Layout/Flex'\r\nimport Page from 'components/Layout/Page'\r\nimport { useFarms, usePollFarmsWithUserData, usePriceCakeBusd } from 'state/farms/hooks'\r\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\r\nimport { DeserializedFarm } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getFarmApr } from 'utils/apr'\r\nimport { orderBy } from 'lodash'\r\nimport isArchivedPid from 'utils/farmHelpers'\r\nimport { latinise } from 'utils/latinise'\r\nimport { useUserFarmStakedOnly, useUserFarmsViewMode } from 'state/user/hooks'\r\nimport { ViewMode } from 'state/user/actions'\r\nimport PageHeader from 'components/PageHeader'\r\nimport SearchInput from 'components/SearchInput'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport Loading from 'components/Loading'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport Table from './components/FarmTable/FarmTable'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\nimport { RowProps } from './components/FarmTable/Row'\r\nimport ToggleView from './components/ToggleView/ToggleView'\r\nimport { DesktopColumnSchema } from './components/types'\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  margin-bottom: 32px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst StyledImage = styled(Image)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 58px;\r\n`\r\n\r\n\r\nconst NUMBER_OF_FARMS_VISIBLE = 12\r\n\r\nconst getDisplayApr = (cakeRewardsApr?: number, lpRewardsApr?: number) => {\r\n  if (cakeRewardsApr && lpRewardsApr) {\r\n    return (cakeRewardsApr + lpRewardsApr).toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n  }\r\n  if (cakeRewardsApr) {\r\n    return cakeRewardsApr.toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n  }\r\n  return null\r\n}\r\n\r\nexport interface FarmsProps {\r\n  tokenMode?: boolean\r\n}\r\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\r\n  const { path } = useRouteMatch()\r\n  const { pathname } = useLocation()\r\n  const { t } = useTranslation()\r\n  const { data: farmsLP, userDataLoaded } = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const [query, setQuery] = useState('')\r\n  const [viewMode, setViewMode] = useUserFarmsViewMode()\r\n  const { account } = useWeb3React()\r\n  const [sortOption, setSortOption] = useState('hot')\r\n  const { observerRef, isIntersecting } = useIntersectionObserver()\r\n  const chosenFarmsLength = useRef(0)\r\n  const {tokenMode } = farmsProps;\r\n\r\n  const isArchived = pathname.includes('archived')\r\n  const isInactive = pathname.includes('history')\r\n  const isActive = !isInactive && !isArchived\r\n\r\n  usePollFarmsWithUserData(isArchived)\r\n\r\n  // Users with no wallet connected should see 0 as Earned amount\r\n  // Connected users should see loading indicator until first userData has loaded\r\n  const userDataReady = !account || (!!account && userDataLoaded)\r\n\r\n  const [stakedOnly, setStakedOnly] = useUserFarmStakedOnly(isActive)\r\n\r\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\r\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\r\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\r\n\r\n  const stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedInactiveFarms = inactiveFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedArchivedFarms = archivedFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay: DeserializedFarm[]): FarmWithStakedValue[] => {\r\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        if (!farm.lpTotalInQuoteToken || !farm.quoteTokenPriceBusd) {\r\n          return farm\r\n        }\r\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteTokenPriceBusd)\r\n        const { cakeRewardsApr, lpRewardsApr } = isActive\r\n          ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET])\r\n          : { cakeRewardsApr: 0, lpRewardsApr: 0 }\r\n\r\n        return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\r\n      })\r\n\r\n      if (query) {\r\n        const lowercaseQuery = latinise(query.toLowerCase())\r\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\r\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\r\n        })\r\n      }\r\n      return farmsToDisplayWithAPR\r\n    },\r\n    [cakePrice, query, isActive],\r\n  )\r\n\r\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setQuery(event.target.value)\r\n  }\r\n\r\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\r\n\r\n  const chosenFarmsMemoized = useMemo(() => {\r\n    let chosenFarms = []\r\n\r\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\r\n      switch (sortOption) {\r\n        case 'apr':\r\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr + farm.lpRewardsApr, 'desc')\r\n        case 'multiplier':\r\n          return orderBy(\r\n            farms,\r\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\r\n            'desc',\r\n          )\r\n        case 'earned':\r\n          return orderBy(\r\n            farms,\r\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\r\n            'desc',\r\n          )\r\n        case 'liquidity':\r\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\r\n        default:\r\n          return farms\r\n      }\r\n    }\r\n\r\n    if (isActive) {\r\n      chosenFarms = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\r\n    }\r\n    if (isInactive) {\r\n      chosenFarms = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\r\n    }\r\n    if (isArchived) {\r\n      chosenFarms = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\r\n    }\r\n\r\n    return sortFarms(chosenFarms).slice(0, numberOfFarmsVisible)\r\n  }, [\r\n    sortOption,\r\n    activeFarms,\r\n    farmsList,\r\n    inactiveFarms,\r\n    archivedFarms,\r\n    isActive,\r\n    isInactive,\r\n    isArchived,\r\n    stakedArchivedFarms,\r\n    stakedInactiveFarms,\r\n    stakedOnly,\r\n    stakedOnlyFarms,\r\n    numberOfFarmsVisible,\r\n  ])\r\n\r\n  chosenFarmsLength.current = chosenFarmsMemoized.length\r\n\r\n  useEffect(() => {\r\n    if (isIntersecting) {\r\n      setNumberOfFarmsVisible((farmsCurrentlyVisible) => {\r\n        if (farmsCurrentlyVisible <= chosenFarmsLength.current) {\r\n          return farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE\r\n        }\r\n        return farmsCurrentlyVisible\r\n      })\r\n    }\r\n  }, [isIntersecting])\r\n\r\n  const rowData = chosenFarmsMemoized.map((farm) => {\r\n    const { token, quoteToken } = farm\r\n    const tokenAddress = token.address\r\n    const quoteTokenAddress = quoteToken.address\r\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\r\n\r\n    const row: RowProps = {\r\n      apr: {\r\n        value: getDisplayApr(farm.apr, farm.lpRewardsApr),\r\n        pid: farm.pid,\r\n        multiplier: farm.multiplier,\r\n        lpLabel,\r\n        lpSymbol: farm.lpSymbol,\r\n        tokenAddress,\r\n        quoteTokenAddress,\r\n        cakePrice,\r\n        originalValue: farm.apr,\r\n      },\r\n      farm: {\r\n        label: lpLabel,\r\n        pid: farm.pid,\r\n        token: farm.token,\r\n        quoteToken: farm.quoteToken,\r\n        isTokenOnly: farm.isTokenOnly,\r\n        depositFeeBP: farm.depositFeeBP,\r\n      },\r\n      earned: {\r\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\r\n        pid: farm.pid,\r\n      },\r\n      liquidity: {\r\n        liquidity: farm.liquidity,\r\n      },\r\n      multiplier: {\r\n        multiplier: farm.multiplier,\r\n      },\r\n      details: farm,\r\n    }\r\n\r\n    return row\r\n  })\r\n\r\n  const renderContent = (): JSX.Element => {\r\n    if (viewMode === ViewMode.TABLE && rowData.length) {\r\n      const columnSchema = DesktopColumnSchema\r\n\r\n      const columns = columnSchema.map((column) => ({\r\n        id: column.id,\r\n        name: column.name,\r\n        label: column.label,\r\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\r\n          switch (column.name) {\r\n            case 'farm':\r\n              return b.id - a.id\r\n            case 'apr':\r\n              if (a.original.apr.value && b.original.apr.value) {\r\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\r\n              }\r\n\r\n              return 0\r\n            case 'earned':\r\n              return a.original.earned.earnings - b.original.earned.earnings\r\n            default:\r\n              return 1\r\n          }\r\n        },\r\n        sortable: column.sortable,\r\n      }))\r\n\r\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\r\n    }\r\n\r\n    return (\r\n      <FlexLayout>\r\n        <Route exact path={`${path}`}>\r\n          {chosenFarmsMemoized.map((farm) => (\r\n            <FarmCard\r\n              key={farm.pid}\r\n              farm={farm}\r\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\r\n              cakePrice={cakePrice}\r\n              account={account}\r\n              removed={false}\r\n            />\r\n          ))}\r\n        </Route>\r\n        <Route exact path={`${path}/history`}>\r\n          {chosenFarmsMemoized.map((farm) => (\r\n            <FarmCard\r\n              key={farm.pid}\r\n              farm={farm}\r\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\r\n              cakePrice={cakePrice}\r\n              account={account}\r\n              removed\r\n            />\r\n          ))}\r\n        </Route>\r\n        <Route exact path={`${path}/archived`}>\r\n          {chosenFarmsMemoized.map((farm) => (\r\n            <FarmCard\r\n              key={farm.pid}\r\n              farm={farm}\r\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\r\n              cakePrice={cakePrice}\r\n              account={account}\r\n              removed\r\n            />\r\n          ))}\r\n        </Route>\r\n      </FlexLayout>\r\n    )\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader>\r\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n        {tokenMode ? t('Pools') : t('Farms')}\r\n        </Heading>\r\n        <Heading scale=\"lg\" color=\"text\">\r\n        {tokenMode ? t('Stake some tokens to earn.') : t('Stake LP tokens to earn.')}\r\n        </Heading>\r\n        {/* <NavLink exact activeClassName=\"active\" to=\"/farms/auction\" id=\"lottery-pot-banner\">\r\n          <Button p=\"0\" variant=\"text\">\r\n            <Text color=\"primary\" bold fontSize=\"16px\" mr=\"4px\">\r\n              {t('Community Auctions')}\r\n            </Text>\r\n            <ArrowForwardIcon color=\"primary\" />\r\n          </Button>\r\n        </NavLink> */}\r\n      </PageHeader>\r\n      <Page>\r\n        <ControlContainer>\r\n          <ViewControls>\r\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\r\n            <ToggleWrapper>\r\n              <Toggle\r\n                id=\"staked-only-farms\"\r\n                checked={stakedOnly}\r\n                onChange={() => setStakedOnly(!stakedOnly)}\r\n                scale=\"sm\"\r\n              />\r\n              <Text> {t('Staked only')}</Text>\r\n            </ToggleWrapper>\r\n            <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\r\n          </ViewControls>\r\n          <FilterContainer>\r\n            <LabelWrapper>\r\n              <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\r\n              <Select\r\n                options={[\r\n                  {\r\n                    label: t('Hot'),\r\n                    value: 'hot',\r\n                  },\r\n                  {\r\n                    label: t('APR'),\r\n                    value: 'apr',\r\n                  },\r\n                  {\r\n                    label: t('Multiplier'),\r\n                    value: 'multiplier',\r\n                  },\r\n                  {\r\n                    label: t('Earned'),\r\n                    value: 'earned',\r\n                  },\r\n                  {\r\n                    label: t('Liquidity'),\r\n                    value: 'liquidity',\r\n                  },\r\n                ]}\r\n                onOptionChange={handleSortOptionChange}\r\n              />\r\n            </LabelWrapper>\r\n            <LabelWrapper style={{ marginLeft: 16 }}>\r\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\r\n              <SearchInput onChange={handleChangeQuery} placeholder={tokenMode ? t('Search Pools') : t('Search Farms')} />\r\n            </LabelWrapper>\r\n          </FilterContainer>\r\n        </ControlContainer>\r\n        {renderContent()}\r\n        {account && !userDataLoaded && stakedOnly && (\r\n          <Flex justifyContent=\"center\">\r\n            <Loading />\r\n          </Flex>\r\n        )}\r\n        <div ref={observerRef} />\r\n        <StyledImage src=\"/images/decorations/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} />\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n","import React, { useEffect, useRef } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\n\r\ninterface BalanceProps extends TextProps {\r\n  value: number\r\n  decimals?: number\r\n  unit?: string\r\n  isDisabled?: boolean\r\n  prefix?: string\r\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\r\n}\r\n\r\nconst Balance: React.FC<BalanceProps> = ({\r\n  value,\r\n  color = 'text',\r\n  decimals = 3,\r\n  isDisabled = false,\r\n  unit,\r\n  prefix,\r\n  onClick,\r\n  ...props\r\n}) => {\r\n  const previousValue = useRef(0)\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n\r\n  return (\r\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\r\n      <CountUp\r\n        start={previousValue.current}\r\n        end={value}\r\n        prefix={prefix}\r\n        suffix={unit}\r\n        decimals={decimals}\r\n        duration={1}\r\n        separator=\",\"\r\n      />\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","import { ethers, Contract, Overrides } from 'ethers'\r\n\r\n/**\r\n * Estimate the gas needed to call a function, and add a 10% margin\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the methode called\r\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\r\n * @param args An array of arguments to pass to the method\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport const estimateGas = async (\r\n  contract: Contract,\r\n  methodName: string,\r\n  methodArgs: any[],\r\n  gasMarginPer10000: number,\r\n) => {\r\n  if (!contract[methodName]) {\r\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\r\n  }\r\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\r\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\r\n  const gasEstimation = rawGasEstimation\r\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\r\n    .div(ethers.BigNumber.from(10000))\r\n  return gasEstimation\r\n}\r\n\r\n/**\r\n * Perform a contract call with a gas value returned from estimateGas\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the method called\r\n * @param methodArgs An array of arguments to pass to the method\r\n * @param overrides An overrides object to pass to the method\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport const callWithEstimateGas = async (\r\n  contract: Contract,\r\n  methodName: string,\r\n  methodArgs: any[] = [],\r\n  overrides: Overrides = {},\r\n  gasMarginPer10000 = 1000,\r\n): Promise<ethers.providers.TransactionResponse> => {\r\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\r\n  const tx = await contract[methodName](...methodArgs, {\r\n    gasLimit: gasEstimation,\r\n    ...overrides,\r\n  })\r\n  return tx\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport store from 'state'\r\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\r\n\r\n/**\r\n * Function to return gasPrice outwith a react component\r\n */\r\nconst getGasPrice = (): string => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const state = store.getState()\r\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\r\n  \r\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\r\n}\r\n\r\nexport default getGasPrice\r\n","import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport getGasPrice from 'utils/getGasPrice'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\r\n  \r\n  const gasPrice = getGasPrice()\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  \r\n\r\n  const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\r\n  const gasPrice = getGasPrice()\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n\r\n\r\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const harvestFarm = async (masterChefContract, pid) => {\r\n  const gasPrice = getGasPrice()\r\n\r\n\r\n  const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n","/* eslint-disable import/prefer-default-export */\r\nimport BigNumber from 'bignumber.js'\r\nimport pools from 'config/constants/pools'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport multicall from '../multicall'\r\nimport { simpleRpcProvider } from '../providers'\r\nimport { getAddress } from '../addressHelpers'\r\n\r\n/**\r\n * Returns the total number of pools that were active at a given block\r\n */\r\nexport const getActivePools = async (block?: number) => {\r\n  const eligiblePools = pools\r\n    .filter((pool) => pool.sousId !== 0)\r\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\r\n    address: getAddress(contractAddress),\r\n    name: 'startBlock',\r\n  }))\r\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\r\n    address: getAddress(contractAddress),\r\n    name: 'bonusEndBlock',\r\n  }))\r\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\r\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\r\n\r\n  return eligiblePools.reduce((accum, poolCheck, index) => {\r\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\r\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\r\n\r\n    if (!startBlock || !endBlock) {\r\n      return accum\r\n    }\r\n\r\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\r\n      return accum\r\n    }\r\n\r\n    return [...accum, poolCheck]\r\n  }, [])\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport Container from '../Layout/Container'\r\nimport { PageHeaderProps } from './types'\r\n\r\nconst Outer = styled(Box)<{ background?: string }>`\r\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\r\n`\r\n\r\nconst Inner = styled(Container)`\r\n  padding-top: 32px;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({ background, children, ...props }) => (\r\n  <Outer background={background} {...props}>\r\n    <Inner>{children}</Inner>\r\n  </Outer>\r\n)\r\n\r\nexport default PageHeader\r\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar PropTypes = require('prop-types');\nvar React = require('react');\nvar warning = require('warning');\nvar CountUp$1 = require('countup.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar warning__default = /*#__PURE__*/_interopDefaultLegacy(warning);\nvar CountUp__default = /*#__PURE__*/_interopDefaultLegacy(CountUp$1);\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar createCountUpInstance = function createCountUpInstance(el, props) {\n  var decimal = props.decimal,\n      decimals = props.decimals,\n      duration = props.duration,\n      easingFn = props.easingFn,\n      end = props.end,\n      formattingFn = props.formattingFn,\n      prefix = props.prefix,\n      separator = props.separator,\n      start = props.start,\n      suffix = props.suffix,\n      useEasing = props.useEasing;\n  return new CountUp__default['default'](el, start, end, decimals, duration, {\n    decimal: decimal,\n    easingFn: easingFn,\n    formattingFn: formattingFn,\n    separator: separator,\n    prefix: prefix,\n    suffix: suffix,\n    useEasing: useEasing,\n    useGrouping: !!separator\n  });\n};\n\nvar CountUp = /*#__PURE__*/function (_Component) {\n  _inherits(CountUp, _Component);\n\n  var _super = _createSuper(CountUp);\n\n  function CountUp() {\n    var _this;\n\n    _classCallCheck(this, CountUp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"checkProps\", function (updatedProps) {\n      var _this$props = _this.props,\n          start = _this$props.start,\n          suffix = _this$props.suffix,\n          prefix = _this$props.prefix,\n          redraw = _this$props.redraw,\n          duration = _this$props.duration,\n          separator = _this$props.separator,\n          decimals = _this$props.decimals,\n          decimal = _this$props.decimal,\n          className = _this$props.className;\n      var hasPropsChanged = duration !== updatedProps.duration || start !== updatedProps.start || suffix !== updatedProps.suffix || prefix !== updatedProps.prefix || separator !== updatedProps.separator || decimals !== updatedProps.decimals || decimal !== updatedProps.decimal || className !== updatedProps.className;\n      return hasPropsChanged || redraw;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createInstance\", function () {\n      if (typeof _this.props.children === 'function') {\n        // Warn when user didn't use containerRef at all\n        warning__default['default'](_this.containerRef.current && (_this.containerRef.current instanceof HTMLElement || _this.containerRef.current instanceof SVGTextElement || _this.containerRef.current instanceof SVGTSpanElement), \"Couldn't find attached element to hook the CountUp instance into! Try to attach \\\"containerRef\\\" from the render prop to a an HTMLElement, eg. <span ref={containerRef} />.\");\n      }\n\n      return createCountUpInstance(_this.containerRef.current, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pauseResume\", function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          reset = _assertThisInitialize.reset,\n          start = _assertThisInitialize.restart,\n          update = _assertThisInitialize.update;\n\n      var onPauseResume = _this.props.onPauseResume;\n\n      _this.instance.pauseResume();\n\n      onPauseResume({\n        reset: reset,\n        start: start,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"reset\", function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize2.pauseResume,\n          start = _assertThisInitialize2.restart,\n          update = _assertThisInitialize2.update;\n\n      var onReset = _this.props.onReset;\n\n      _this.instance.reset();\n\n      onReset({\n        pauseResume: pauseResume,\n        start: start,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"restart\", function () {\n      _this.reset();\n\n      _this.start();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"start\", function () {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize3.pauseResume,\n          reset = _assertThisInitialize3.reset,\n          start = _assertThisInitialize3.restart,\n          update = _assertThisInitialize3.update;\n\n      var _this$props2 = _this.props,\n          delay = _this$props2.delay,\n          onEnd = _this$props2.onEnd,\n          onStart = _this$props2.onStart;\n\n      var run = function run() {\n        return _this.instance.start(function () {\n          return onEnd({\n            pauseResume: pauseResume,\n            reset: reset,\n            start: start,\n            update: update\n          });\n        });\n      }; // Delay start if delay prop is properly set\n\n\n      if (delay > 0) {\n        _this.timeoutId = setTimeout(run, delay * 1000);\n      } else {\n        run();\n      }\n\n      onStart({\n        pauseResume: pauseResume,\n        reset: reset,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (newEnd) {\n      var _assertThisInitialize4 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize4.pauseResume,\n          reset = _assertThisInitialize4.reset,\n          start = _assertThisInitialize4.restart;\n\n      var onUpdate = _this.props.onUpdate;\n\n      _this.instance.update(newEnd);\n\n      onUpdate({\n        pauseResume: pauseResume,\n        reset: reset,\n        start: start\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"containerRef\", /*#__PURE__*/React__default['default'].createRef());\n\n    return _this;\n  }\n\n  _createClass(CountUp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          delay = _this$props3.delay;\n      this.instance = this.createInstance(); // Don't invoke start if component is used as a render prop\n\n      if (typeof children === 'function' && delay !== 0) return; // Otherwise just start immediately\n\n      this.start();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var end = this.props.end;\n      return this.checkProps(nextProps) || end !== nextProps.end;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // If duration, suffix, prefix, separator or start has changed\n      // there's no way to update the values.\n      // So we need to re-create the CountUp instance in order to\n      // restart it.\n      var _this$props4 = this.props,\n          end = _this$props4.end,\n          preserveValue = _this$props4.preserveValue;\n\n      if (this.checkProps(prevProps)) {\n        this.instance.reset();\n        this.instance = this.createInstance();\n        this.start();\n      } // Only end value has changed, so reset and and re-animate with the updated\n      // end value.\n\n\n      if (end !== prevProps.end) {\n        if (!preserveValue) {\n          this.instance.reset();\n        }\n\n        this.instance.update(end);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n      }\n\n      this.instance.reset();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          className = _this$props5.className,\n          style = _this$props5.style;\n      var containerRef = this.containerRef,\n          pauseResume = this.pauseResume,\n          reset = this.reset,\n          restart = this.restart,\n          update = this.update;\n\n      if (typeof children === 'function') {\n        return children({\n          countUpRef: containerRef,\n          pauseResume: pauseResume,\n          reset: reset,\n          start: restart,\n          update: update\n        });\n      }\n\n      return /*#__PURE__*/React__default['default'].createElement(\"span\", {\n        className: className,\n        ref: containerRef,\n        style: style\n      });\n    }\n  }]);\n\n  return CountUp;\n}(React.Component);\n\n_defineProperty(CountUp, \"propTypes\", {\n  decimal: PropTypes__default['default'].string,\n  decimals: PropTypes__default['default'].number,\n  delay: PropTypes__default['default'].number,\n  easingFn: PropTypes__default['default'].func,\n  end: PropTypes__default['default'].number.isRequired,\n  formattingFn: PropTypes__default['default'].func,\n  onEnd: PropTypes__default['default'].func,\n  onStart: PropTypes__default['default'].func,\n  prefix: PropTypes__default['default'].string,\n  redraw: PropTypes__default['default'].bool,\n  separator: PropTypes__default['default'].string,\n  start: PropTypes__default['default'].number,\n  startOnMount: PropTypes__default['default'].bool,\n  suffix: PropTypes__default['default'].string,\n  style: PropTypes__default['default'].object,\n  useEasing: PropTypes__default['default'].bool,\n  preserveValue: PropTypes__default['default'].bool\n});\n\n_defineProperty(CountUp, \"defaultProps\", {\n  decimal: '.',\n  decimals: 0,\n  delay: null,\n  duration: null,\n  easingFn: null,\n  formattingFn: null,\n  onEnd: function onEnd() {},\n  onPauseResume: function onPauseResume() {},\n  onReset: function onReset() {},\n  onStart: function onStart() {},\n  onUpdate: function onUpdate() {},\n  prefix: '',\n  redraw: false,\n  separator: '',\n  start: 0,\n  startOnMount: true,\n  suffix: '',\n  style: undefined,\n  useEasing: true,\n  preserveValue: false\n});\n\n// and just sets the innerHTML of the element.\n\nvar MOCK_ELEMENT = {\n  innerHTML: null\n};\n\nvar useCountUp = function useCountUp(props) {\n  var _props = _objectSpread2(_objectSpread2({}, CountUp.defaultProps), props);\n\n  var start = _props.start,\n      formattingFn = _props.formattingFn;\n\n  var _useState = React.useState(typeof formattingFn === 'function' ? formattingFn(start) : start),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var countUpRef = React.useRef(null);\n  var timerRef = React.useRef(null);\n\n  var createInstance = function createInstance() {\n    var countUp = createCountUpInstance(MOCK_ELEMENT, _props);\n    var formattingFnRef = countUp.options.formattingFn;\n\n    countUp.options.formattingFn = function () {\n      var result = formattingFnRef.apply(void 0, arguments);\n      setCount(result);\n    };\n\n    return countUp;\n  };\n\n  var getCountUp = function getCountUp() {\n    var countUp = countUpRef.current;\n\n    if (countUp !== null) {\n      return countUp;\n    }\n\n    var newCountUp = createInstance();\n    countUpRef.current = newCountUp;\n    return newCountUp;\n  };\n\n  var reset = function reset() {\n    var onReset = _props.onReset;\n    getCountUp().reset();\n    onReset({\n      pauseResume: pauseResume,\n      start: restart,\n      update: update\n    });\n  };\n\n  var restart = function restart() {\n    var onStart = _props.onStart,\n        onEnd = _props.onEnd;\n    getCountUp().reset();\n    getCountUp().start(function () {\n      onEnd({\n        pauseResume: pauseResume,\n        reset: reset,\n        start: restart,\n        update: update\n      });\n    });\n    onStart({\n      pauseResume: pauseResume,\n      reset: reset,\n      update: update\n    });\n  };\n\n  var pauseResume = function pauseResume() {\n    var onPauseResume = _props.onPauseResume;\n    getCountUp().pauseResume();\n    onPauseResume({\n      reset: reset,\n      start: restart,\n      update: update\n    });\n  };\n\n  var update = function update(newEnd) {\n    var onUpdate = _props.onUpdate;\n    getCountUp().update(newEnd);\n    onUpdate({\n      pauseResume: pauseResume,\n      reset: reset,\n      start: restart\n    });\n  };\n\n  React.useEffect(function () {\n    var delay = _props.delay,\n        onStart = _props.onStart,\n        onEnd = _props.onEnd,\n        startOnMount = _props.startOnMount;\n\n    if (startOnMount) {\n      timerRef.current = setTimeout(function () {\n        onStart({\n          pauseResume: pauseResume,\n          reset: reset,\n          update: update\n        });\n        getCountUp().start(function () {\n          clearTimeout(timerRef.current);\n          onEnd({\n            pauseResume: pauseResume,\n            reset: reset,\n            start: restart,\n            update: update\n          });\n        });\n      }, delay * 1000);\n    }\n\n    return function () {\n      clearTimeout(timerRef.current);\n      reset();\n    };\n  }, []);\n  return {\n    countUp: count,\n    start: restart,\n    pauseResume: pauseResume,\n    reset: reset,\n    update: update\n  };\n};\n\nexports.default = CountUp;\nexports.useCountUp = useCountUp;\n","!function(a,n){\"function\"==typeof define&&define.amd?define(n):\"object\"==typeof exports?module.exports=n(require,exports,module):a.CountUp=n()}(this,function(a,n,t){var e=function(a,n,t,e,i,r){function o(a){var n,t,e,i,r,o,s=a<0;if(a=Math.abs(a).toFixed(l.decimals),a+=\"\",n=a.split(\".\"),t=n[0],e=n.length>1?l.options.decimal+n[1]:\"\",l.options.useGrouping){for(i=\"\",r=0,o=t.length;r<o;++r)0!==r&&r%3===0&&(i=l.options.separator+i),i=t[o-r-1]+i;t=i}return l.options.numerals.length&&(t=t.replace(/[0-9]/g,function(a){return l.options.numerals[+a]}),e=e.replace(/[0-9]/g,function(a){return l.options.numerals[+a]})),(s?\"-\":\"\")+l.options.prefix+t+e+l.options.suffix}function s(a,n,t,e){return t*(-Math.pow(2,-10*a/e)+1)*1024/1023+n}function u(a){return\"number\"==typeof a&&!isNaN(a)}var l=this;if(l.version=function(){return\"1.9.3\"},l.options={useEasing:!0,useGrouping:!0,separator:\",\",decimal:\".\",easingFn:s,formattingFn:o,prefix:\"\",suffix:\"\",numerals:[]},r&&\"object\"==typeof r)for(var m in l.options)r.hasOwnProperty(m)&&null!==r[m]&&(l.options[m]=r[m]);\"\"===l.options.separator?l.options.useGrouping=!1:l.options.separator=\"\"+l.options.separator;for(var d=0,c=[\"webkit\",\"moz\",\"ms\",\"o\"],f=0;f<c.length&&!window.requestAnimationFrame;++f)window.requestAnimationFrame=window[c[f]+\"RequestAnimationFrame\"],window.cancelAnimationFrame=window[c[f]+\"CancelAnimationFrame\"]||window[c[f]+\"CancelRequestAnimationFrame\"];window.requestAnimationFrame||(window.requestAnimationFrame=function(a,n){var t=(new Date).getTime(),e=Math.max(0,16-(t-d)),i=window.setTimeout(function(){a(t+e)},e);return d=t+e,i}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(a){clearTimeout(a)}),l.initialize=function(){return!!l.initialized||(l.error=\"\",l.d=\"string\"==typeof a?document.getElementById(a):a,l.d?(l.startVal=Number(n),l.endVal=Number(t),u(l.startVal)&&u(l.endVal)?(l.decimals=Math.max(0,e||0),l.dec=Math.pow(10,l.decimals),l.duration=1e3*Number(i)||2e3,l.countDown=l.startVal>l.endVal,l.frameVal=l.startVal,l.initialized=!0,!0):(l.error=\"[CountUp] startVal (\"+n+\") or endVal (\"+t+\") is not a number\",!1)):(l.error=\"[CountUp] target is null or undefined\",!1))},l.printValue=function(a){var n=l.options.formattingFn(a);\"INPUT\"===l.d.tagName?this.d.value=n:\"text\"===l.d.tagName||\"tspan\"===l.d.tagName?this.d.textContent=n:this.d.innerHTML=n},l.count=function(a){l.startTime||(l.startTime=a),l.timestamp=a;var n=a-l.startTime;l.remaining=l.duration-n,l.options.useEasing?l.countDown?l.frameVal=l.startVal-l.options.easingFn(n,0,l.startVal-l.endVal,l.duration):l.frameVal=l.options.easingFn(n,l.startVal,l.endVal-l.startVal,l.duration):l.countDown?l.frameVal=l.startVal-(l.startVal-l.endVal)*(n/l.duration):l.frameVal=l.startVal+(l.endVal-l.startVal)*(n/l.duration),l.countDown?l.frameVal=l.frameVal<l.endVal?l.endVal:l.frameVal:l.frameVal=l.frameVal>l.endVal?l.endVal:l.frameVal,l.frameVal=Math.round(l.frameVal*l.dec)/l.dec,l.printValue(l.frameVal),n<l.duration?l.rAF=requestAnimationFrame(l.count):l.callback&&l.callback()},l.start=function(a){l.initialize()&&(l.callback=a,l.rAF=requestAnimationFrame(l.count))},l.pauseResume=function(){l.paused?(l.paused=!1,delete l.startTime,l.duration=l.remaining,l.startVal=l.frameVal,requestAnimationFrame(l.count)):(l.paused=!0,cancelAnimationFrame(l.rAF))},l.reset=function(){l.paused=!1,delete l.startTime,l.initialized=!1,l.initialize()&&(cancelAnimationFrame(l.rAF),l.printValue(l.startVal))},l.update=function(a){if(l.initialize()){if(a=Number(a),!u(a))return void(l.error=\"[CountUp] update() - new endVal is not a number: \"+a);l.error=\"\",a!==l.frameVal&&(cancelAnimationFrame(l.rAF),l.paused=!1,delete l.startTime,l.startVal=l.frameVal,l.endVal=a,l.countDown=l.startVal>l.endVal,l.rAF=requestAnimationFrame(l.count))}},l.initialize()&&l.printValue(l.startVal)};return e});","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\r\n\r\nconst DropDownHeader = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n  border-radius: 16px;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  transition: border-radius 0.15s;\r\n`\r\n\r\nconst DropDownListContainer = styled.div`\r\n  min-width: 136px;\r\n  height: 0;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  opacity: 0;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n`\r\n\r\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\r\n  cursor: pointer;\r\n  width: 100%;\r\n  position: relative;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  height: 40px;\r\n  min-width: 136px;\r\n  user-select: none;\r\n  z-index: 20;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isOpen &&\r\n    css`\r\n      ${DropDownHeader} {\r\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n        border-radius: 16px 16px 0 0;\r\n      }\r\n\r\n      ${DropDownListContainer} {\r\n        height: auto;\r\n        transform: scaleY(1);\r\n        opacity: 1;\r\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        border-top-width: 0;\r\n        border-radius: 0 0 16px 16px;\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n      }\r\n    `}\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst DropDownList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n`\r\n\r\nconst ListItem = styled.li`\r\n  list-style: none;\r\n  padding: 8px 16px;\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.inputSecondary};\r\n  }\r\n`\r\n\r\nexport interface SelectProps extends BoxProps {\r\n  options: OptionProps[]\r\n  onOptionChange?: (option: OptionProps) => void\r\n}\r\n\r\nexport interface OptionProps {\r\n  label: string\r\n  value: any\r\n}\r\n\r\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onOptionChange, ...props }) => {\r\n  const dropdownRef = useRef(null)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\r\n\r\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    setIsOpen(!isOpen)\r\n    event.stopPropagation()\r\n  }\r\n\r\n  const onOptionClicked = (selectedIndex: number) => () => {\r\n    setSelectedOptionIndex(selectedIndex)\r\n    setIsOpen(false)\r\n\r\n    if (onOptionChange) {\r\n      onOptionChange(options[selectedIndex])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = () => {\r\n      setIsOpen(false)\r\n    }\r\n\r\n    document.addEventListener('click', handleClickOutside)\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <DropDownContainer isOpen={isOpen} {...props}>\r\n      <DropDownHeader onClick={toggling}>\r\n        <Text>{options[selectedOptionIndex].label}</Text>\r\n      </DropDownHeader>\r\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\r\n      <DropDownListContainer>\r\n        <DropDownList ref={dropdownRef}>\r\n          {options.map((option, index) =>\r\n            index !== selectedOptionIndex ? (\r\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\r\n                <Text>{option.label}</Text>\r\n              </ListItem>\r\n            ) : null,\r\n          )}\r\n        </DropDownList>\r\n      </DropDownListContainer>\r\n    </DropDownContainer>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import React from 'react'\r\nimport {\r\n  TokenPairImage as UIKitTokenPairImage,\r\n  TokenPairImageProps as UIKitTokenPairImageProps,\r\n  TokenImage as UIKitTokenImage,\r\n  ImageProps,\r\n} from '@pancakeswap/uikit'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Token } from '@pancakeswap/sdk'\r\n\r\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\r\n  primaryToken: Token\r\n  secondaryToken: Token\r\n}\r\n\r\nconst getImageUrlFromToken = (token: Token) => {\r\n  const address = token.symbol === 'BNB' ? tokens.wbnb.address : token.address\r\n  if(token.symbol === 'UBUNTU') return `/images/tokens/${address}.png`\r\n  return `/images/tokens/${address}.svg`\r\n}\r\n\r\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\r\n  return (\r\n    <UIKitTokenPairImage\r\n      primarySrc={getImageUrlFromToken(primaryToken)}\r\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\ninterface TokenImageProps extends ImageProps {\r\n  token: Token\r\n}\r\n\r\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\r\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Loading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n"],"sourceRoot":""}