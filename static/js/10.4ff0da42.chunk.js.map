{"version":3,"sources":["views/Nft/market/Collection/Items/PancakeBunniesCollectionNfts.tsx","views/Nft/market/components/Filters/ListFilter/styles.tsx","views/Nft/market/components/Filters/ListFilter/index.tsx","views/Nft/market/Collection/Items/ClearAllButton.tsx","views/Nft/market/Collection/Items/Filters.tsx","views/Nft/market/Collection/Items/CollectionNfts.tsx","views/Nft/market/Collection/Items/FilteredCollectionNfts.tsx","views/Nft/market/Collection/Items/CollectionWrapper.tsx","views/Nft/market/Collection/Items/index.tsx","../node_modules/lodash/_baseOrderBy.js","../node_modules/lodash/_baseSortBy.js","../node_modules/lodash/_compareMultiple.js","../node_modules/lodash/_compareAscending.js","../node_modules/lodash/orderBy.js","../node_modules/lodash/isEmpty.js","../node_modules/lodash/_hasUnicode.js","../node_modules/lodash/upperFirst.js","views/Nft/market/hooks/useGetCollectionDistribution.tsx","../node_modules/lodash/_createCaseFirst.js","../node_modules/lodash/_castSlice.js","../node_modules/lodash/_baseSlice.js","../node_modules/lodash/_stringToArray.js","../node_modules/lodash/_asciiToArray.js","../node_modules/lodash/_unicodeToArray.js","views/Nft/market/hooks/useAllPancakeBunnyNfts.ts","../node_modules/lodash/capitalize.js"],"names":["PancakeBunniesCollectionNfts","collection","sortBy","address","allPancakeBunnyNfts","useAllPancakeBunnyNfts","sortedNfts","orderBy","nft","meta","Number","length","gridGap","gridTemplateColumns","alignItems","map","tokenId","collectionName","GridPlaceholder","StyledItemRow","styled","Flex","ItemImage","Image","ItemRow","item","isSelected","onSelect","px","py","onClick","image","src","height","width","mr","style","flex","label","undefined","count","color","formatNumber","name","scale","checked","value","onChange","noop","ml","SearchWrapper","theme","colors","dropdown","hasHeader","FilterButton","TriggerButton","Button","hasItem","CloseButton","IconButton","ListFilter","title","traitType","items","collectionAddress","t","useTranslation","useState","isOpen","setIsOpen","query","setQuery","orderKey","orderDir","orderState","setOrderState","wrapperRef","useRef","menuRef","useMatchBreakpoints","isMobile","isDesktop","nftFilters","useGetNftFilters","nftFilterState","useGetNftFilterLoadingState","dispatch","useAppDispatch","traitFilter","isTraitSelected","filteredItems","filter","toLowerCase","indexOf","toggleSort","newOrderKey","prevOrderDir","useEffect","handleClickOutside","target","current","contains","document","addEventListener","removeEventListener","mb","ref","component","variant","disabled","NftFilterLoadingState","LOADING","maxWidth","p","startIcon","placeholder","evt","autoFocus","fontSize","fontWeight","textTransform","overflowY","filteredItem","isItemSelected","attr","filterNftsFromCollection","handleItemSelect","justifyContent","textAlign","newFilters","ClearAllButton","props","removeAllFilters","ScrollableFlexContainer","mediaQueries","md","Filters","data","useGetCollectionDistribution","attrsByType","attributes","reduce","accum","uniqueTraitTypes","Object","keys","capitalize","isEmpty","CollectionNfts","totalSupply","page","setPage","collectionNfts","useNftsFromCollection","isFetching","fetchNftsFromCollections","size","REQUEST_SIZE","currentAskPriceAsNumber","marketData","parseFloat","currentAskPrice","mt","prevPage","endIcon","spin","numItems","FilteredCollectionNfts","numToShow","setNumToShow","nftsToShow","slice","prevNumToShow","flexDirection","CollectionWrapper","Container","Items","useParams","setSortBy","useGetCollection","isPBCollection","pancakeBunniesAddress","sortByItems","fetchCollection","Header","minWidth","Select","options","onOptionChange","newOption","arrayMap","require","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","isArray","module","exports","iteratees","orders","iteratee","index","result","key","object","other","array","comparer","sort","compareAscending","objCriteria","criteria","othCriteria","ordersLength","isSymbol","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","baseOrderBy","guard","baseKeys","getTag","isArguments","isArrayLike","isBuffer","isPrototype","isTypedArray","hasOwnProperty","prototype","splice","tag","call","reHasUnicode","RegExp","string","test","upperFirst","createCaseFirst","useGetCollectionDistributionPB","state","setState","a","prevState","getCollectionDistributionApi","apiResponse","fetchTokens","castSlice","hasUnicode","stringToArray","toString","methodName","strSymbols","chr","charAt","trailing","join","baseSlice","start","end","Array","asciiToArray","unicodeToArray","split","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","match","setAllPancakeBunnyNfts","getNftsFromCollectionApi","bunnyIds","getAllPancakeBunniesLowestPrice","lowestPrices","getAllPancakeBunniesRecentUpdatedAt","latestUpdates","allBunnies","bunnyId","description","displayType","updatedAt","fetchPancakeBunnies"],"mappings":"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","file":"static/js/10.4ff0da42.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Grid } from '@pancakeswap/uikit'\r\nimport orderBy from 'lodash/orderBy'\r\nimport { Collection } from 'state/nftMarket/types'\r\nimport { CollectibleLinkCard } from '../../components/CollectibleCard'\r\nimport useAllPancakeBunnyNfts from '../../hooks/useAllPancakeBunnyNfts'\r\nimport GridPlaceholder from '../../components/GridPlaceholder'\r\n\r\ninterface CollectionNftsProps {\r\n  collection: Collection\r\n  sortBy?: string\r\n}\r\n\r\nconst PancakeBunniesCollectionNfts: React.FC<CollectionNftsProps> = ({ collection, sortBy = 'updatedAt' }) => {\r\n  const { address } = collection\r\n  const allPancakeBunnyNfts = useAllPancakeBunnyNfts(address)\r\n\r\n  const sortedNfts = allPancakeBunnyNfts\r\n    ? orderBy(allPancakeBunnyNfts, (nft) => (nft.meta[sortBy] ? Number(nft?.meta[sortBy]) : 0), [\r\n        sortBy === 'currentAskPrice' ? 'asc' : 'desc',\r\n      ])\r\n    : []\r\n\r\n  if (!sortedNfts.length) {\r\n    return <GridPlaceholder />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        gridGap=\"16px\"\r\n        gridTemplateColumns={['1fr', null, 'repeat(3, 1fr)', null, 'repeat(4, 1fr)']}\r\n        alignItems=\"start\"\r\n      >\r\n        {sortedNfts.map((nft) => {\r\n          return <CollectibleLinkCard key={`${nft.tokenId}-${nft.collectionName}`} nft={nft} />\r\n        })}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PancakeBunniesCollectionNfts\r\n","import React from 'react'\r\nimport { Radio, Flex, Image, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport noop from 'lodash/noop'\r\nimport { formatNumber } from 'utils/formatBalance'\r\nimport { Item } from './types'\r\n\r\nconst StyledItemRow = styled(Flex)`\r\n  cursor: pointer;\r\n  user-select: none;\r\n`\r\n\r\nconst ItemImage = styled(Image)`\r\n  border-radius: 50%;\r\n`\r\n\r\ninterface ItemRowProps {\r\n  item: Item\r\n  isSelected: boolean\r\n  onSelect: () => void\r\n}\r\n\r\nexport const ItemRow: React.FC<ItemRowProps> = ({ item, isSelected, onSelect }) => (\r\n  <StyledItemRow alignItems=\"center\" px=\"16px\" py=\"8px\" onClick={onSelect}>\r\n    {item.image && <ItemImage src={item.image} height={48} width={48} mr=\"16px\" />}\r\n    <Text style={{ flex: 1 }}>{item.label}</Text>\r\n    {item.count !== undefined && (\r\n      <Text color=\"textSubtle\" px=\"8px\">\r\n        {formatNumber(item.count, 0, 0)}\r\n      </Text>\r\n    )}\r\n    <Radio name=\"item-select\" scale=\"sm\" checked={isSelected} value={item.label} onChange={noop} ml=\"24px\" />\r\n  </StyledItemRow>\r\n)\r\n\r\nexport const SearchWrapper = styled(Flex)<{ hasHeader: boolean }>`\r\n  background: ${({ theme }) => theme.colors.dropdown};\r\n  ${({ hasHeader }) =>\r\n    !hasHeader &&\r\n    `\r\n    border-radius: 24px 24px 0 0;\r\n  `}\r\n`\r\n\r\nexport const FilterButton = styled(Flex)`\r\n  align-items: center;\r\n  cursor: pointer;\r\n  user-select: none;\r\n\r\n  svg {\r\n    pointer-events: none;\r\n  }\r\n`\r\n","import React, { ChangeEvent, useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Text,\r\n  Flex,\r\n  InlineMenu,\r\n  Input,\r\n  InputGroup,\r\n  SearchIcon,\r\n  useMatchBreakpoints,\r\n  IconButton,\r\n  CloseIcon,\r\n  ArrowUpIcon,\r\n  ArrowDownIcon,\r\n} from '@pancakeswap/uikit'\r\nimport orderBy from 'lodash/orderBy'\r\nimport { useAppDispatch } from 'state'\r\nimport { filterNftsFromCollection } from 'state/nftMarket/reducer'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetNftFilterLoadingState, useGetNftFilters } from 'state/nftMarket/hooks'\r\nimport { NftFilterLoadingState } from 'state/nftMarket/types'\r\nimport { FilterButton, ItemRow, SearchWrapper } from './styles'\r\nimport { Item } from './types'\r\n\r\ninterface ListFilterProps {\r\n  title?: string\r\n  traitType: string\r\n  items: Item[]\r\n  collectionAddress: string\r\n}\r\n\r\ninterface State {\r\n  orderKey: string\r\n  orderDir: 'asc' | 'desc'\r\n}\r\n\r\nconst TriggerButton = styled(Button)<{ hasItem: boolean }>`\r\n  ${({ hasItem }) =>\r\n    hasItem &&\r\n    `  \r\n    border-top-right-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n    padding-right: 8px;\r\n  `}\r\n`\r\n\r\nconst CloseButton = styled(IconButton)`\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n`\r\n\r\nexport const ListFilter: React.FC<ListFilterProps> = ({ title, traitType, items, collectionAddress }) => {\r\n  const { t } = useTranslation()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [query, setQuery] = useState('')\r\n  const [orderState, setOrderState] = useState<State>({ orderKey: 'count', orderDir: 'asc' })\r\n  const wrapperRef = useRef(null)\r\n  const menuRef = useRef(null)\r\n  const { isMobile, isDesktop } = useMatchBreakpoints()\r\n  const nftFilters = useGetNftFilters()\r\n  const nftFilterState = useGetNftFilterLoadingState()\r\n  const dispatch = useAppDispatch()\r\n  const { orderKey, orderDir } = orderState\r\n\r\n  const traitFilter = nftFilters[traitType]\r\n  const isTraitSelected = !!traitFilter\r\n\r\n  const filteredItems =\r\n    query && query.length > 1\r\n      ? items.filter((item) => item.label.toLowerCase().indexOf(query.toLowerCase()) !== -1)\r\n      : items\r\n\r\n  const handleClearItem = () => {\r\n    const newFilters = { ...nftFilters }\r\n\r\n    delete newFilters[traitType]\r\n\r\n    dispatch(\r\n      filterNftsFromCollection({\r\n        collectionAddress,\r\n        nftFilters: newFilters,\r\n      }),\r\n    )\r\n  }\r\n\r\n  const handleMenuClick = () => setIsOpen(!isOpen)\r\n\r\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = evt.target\r\n    setQuery(value)\r\n  }\r\n\r\n  const handleItemSelect = ({ attr }: Item) => {\r\n    dispatch(\r\n      filterNftsFromCollection({\r\n        collectionAddress,\r\n        nftFilters: { ...nftFilters, [traitType]: attr },\r\n      }),\r\n    )\r\n  }\r\n\r\n  const toggleSort = (newOrderKey: string) => () => {\r\n    setOrderState((prevOrderDir) => {\r\n      if (prevOrderDir.orderKey !== newOrderKey) {\r\n        return {\r\n          orderKey: newOrderKey,\r\n          orderDir: 'asc',\r\n        }\r\n      }\r\n\r\n      return {\r\n        orderKey: newOrderKey,\r\n        orderDir: prevOrderDir.orderDir === 'asc' ? 'desc' : 'asc',\r\n      }\r\n    })\r\n  }\r\n\r\n  // @TODO Fix this in the Toolkit\r\n  // This is a fix to ensure the \"isOpen\" value is aligned with the menus's (to avoid a double click)\r\n  useEffect(() => {\r\n    const handleClickOutside = ({ target }: Event) => {\r\n      if (\r\n        wrapperRef.current &&\r\n        menuRef.current &&\r\n        !menuRef.current.contains(target) &&\r\n        !wrapperRef.current.contains(target)\r\n      ) {\r\n        setIsOpen(false)\r\n      }\r\n    }\r\n\r\n    document.addEventListener('click', handleClickOutside)\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside)\r\n    }\r\n  }, [setIsOpen, wrapperRef, menuRef])\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" mr=\"4px\" mb=\"4px\">\r\n      <Box ref={wrapperRef}>\r\n        <InlineMenu\r\n          component={\r\n            <TriggerButton\r\n              onClick={handleMenuClick}\r\n              variant={isTraitSelected ? 'subtle' : 'light'}\r\n              scale=\"sm\"\r\n              disabled={nftFilterState === NftFilterLoadingState.LOADING}\r\n              hasItem={isTraitSelected}\r\n            >\r\n              {title}\r\n            </TriggerButton>\r\n          }\r\n          isOpen={isOpen}\r\n        >\r\n          <Box maxWidth=\"375px\" ref={menuRef}>\r\n            <SearchWrapper hasHeader={!!title && !isMobile} alignItems=\"center\" p=\"16px\">\r\n              <InputGroup startIcon={<SearchIcon color=\"textSubtle\" />}>\r\n                <Input\r\n                  name=\"query\"\r\n                  placeholder={t('Search')}\r\n                  onChange={handleChange}\r\n                  value={query}\r\n                  autoFocus={isDesktop}\r\n                />\r\n              </InputGroup>\r\n            </SearchWrapper>\r\n            <Flex alignItems=\"center\" p=\"16px\">\r\n              <FilterButton onClick={toggleSort('label')} style={{ flex: 1 }}>\r\n                <Text fontSize=\"12px\" color=\"secondary\" fontWeight=\"bold\" textTransform=\"uppercase\">\r\n                  {t('Name')}\r\n                </Text>\r\n                <Box width=\"18px\">\r\n                  {orderKey === 'label' && orderDir === 'asc' && <ArrowUpIcon width=\"18px\" color=\"secondary\" />}\r\n                  {orderKey === 'label' && orderDir === 'desc' && <ArrowDownIcon width=\"18px\" color=\"secondary\" />}\r\n                </Box>\r\n              </FilterButton>\r\n              <FilterButton onClick={toggleSort('count')}>\r\n                <Text fontSize=\"12px\" color=\"secondary\" fontWeight=\"bold\" textTransform=\"uppercase\">\r\n                  {t('Count')}\r\n                </Text>\r\n                <Box width=\"18px\">\r\n                  {orderKey === 'count' && orderDir === 'asc' && <ArrowUpIcon width=\"18px\" color=\"secondary\" />}\r\n                  {orderKey === 'count' && orderDir === 'desc' && <ArrowDownIcon width=\"18px\" color=\"secondary\" />}\r\n                </Box>\r\n              </FilterButton>\r\n            </Flex>\r\n            <Box height=\"240px\" overflowY=\"auto\">\r\n              {filteredItems.length > 0 ? (\r\n                orderBy(filteredItems, orderKey, orderDir).map((filteredItem) => {\r\n                  const handleSelect = () => handleItemSelect(filteredItem)\r\n                  const isItemSelected = traitFilter && traitFilter.value === filteredItem.attr.value\r\n\r\n                  return (\r\n                    <ItemRow\r\n                      key={filteredItem.label}\r\n                      item={filteredItem}\r\n                      isSelected={isItemSelected}\r\n                      onSelect={handleSelect}\r\n                    />\r\n                  )\r\n                })\r\n              ) : (\r\n                <Flex alignItems=\"center\" justifyContent=\"center\" height=\"230px\">\r\n                  <Text color=\"textDisabled\" textAlign=\"center\">\r\n                    {t('No results found')}\r\n                  </Text>\r\n                </Flex>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </InlineMenu>\r\n      </Box>\r\n      {isTraitSelected && (\r\n        <CloseButton\r\n          variant={isTraitSelected ? 'subtle' : 'light'}\r\n          scale=\"sm\"\r\n          onClick={handleClearItem}\r\n          disabled={nftFilterState === NftFilterLoadingState.LOADING}\r\n        >\r\n          <CloseIcon color=\"currentColor\" width=\"18px\" />\r\n        </CloseButton>\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Button, ButtonProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useAppDispatch } from 'state'\r\nimport { removeAllFilters } from 'state/nftMarket/reducer'\r\nimport { useGetNftFilterLoadingState } from 'state/nftMarket/hooks'\r\nimport { NftFilterLoadingState } from 'state/nftMarket/types'\r\n\r\ninterface ClearAllButtonProps extends ButtonProps {\r\n  collectionAddress: string\r\n}\r\n\r\nconst ClearAllButton: React.FC<ClearAllButtonProps> = ({ collectionAddress, ...props }) => {\r\n  const dispatch = useAppDispatch()\r\n  const { t } = useTranslation()\r\n  const nftFilterState = useGetNftFilterLoadingState()\r\n\r\n  const clearAll = () => {\r\n    dispatch(removeAllFilters(collectionAddress))\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      key=\"clear-all\"\r\n      variant=\"text\"\r\n      scale=\"sm\"\r\n      onClick={clearAll}\r\n      disabled={nftFilterState === NftFilterLoadingState.LOADING}\r\n      {...props}\r\n    >\r\n      {t('Clear')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ClearAllButton\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex } from '@pancakeswap/uikit'\r\nimport capitalize from 'lodash/capitalize'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport { useGetNftFilters } from 'state/nftMarket/hooks'\r\nimport { Collection, NftAttribute } from 'state/nftMarket/types'\r\nimport { Item, ListFilter } from 'views/Nft/market/components/Filters'\r\nimport useGetCollectionDistribution from '../../hooks/useGetCollectionDistribution'\r\nimport ClearAllButton from './ClearAllButton'\r\n\r\ninterface FiltersProps {\r\n  collection: Collection\r\n}\r\n\r\nconst ScrollableFlexContainer = styled(Flex)`\r\n  align-items: center;\r\n  flex: 1;\r\n  flex-wrap: nowrap;\r\n  margin-bottom: 32px;\r\n  overflow-x: scroll;\r\n  -webkit-overflow-scrolling: touch;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex-wrap: wrap;\r\n    overflow-x: revert;\r\n  }\r\n`\r\n\r\nconst Filters: React.FC<FiltersProps> = ({ collection }) => {\r\n  const { address } = collection\r\n  const { data } = useGetCollectionDistribution(address)\r\n\r\n  const nftFilters = useGetNftFilters()\r\n  const attrsByType: Record<string, NftAttribute[]> = collection?.attributes?.reduce(\r\n    (accum, attr) => ({\r\n      ...accum,\r\n      [attr.traitType]: accum[attr.traitType] ? [...accum[attr.traitType], attr] : [attr],\r\n    }),\r\n    {},\r\n  )\r\n  const uniqueTraitTypes = attrsByType ? Object.keys(attrsByType) : []\r\n\r\n  return (\r\n    <ScrollableFlexContainer>\r\n      {uniqueTraitTypes.map((traitType) => {\r\n        const attrs = attrsByType[traitType]\r\n        const items: Item[] = attrs.map((attr) => ({\r\n          label: capitalize(attr.value as string),\r\n          count: data && data[traitType] ? data[traitType][attr.value] : undefined,\r\n          attr,\r\n        }))\r\n\r\n        return (\r\n          <ListFilter\r\n            key={traitType}\r\n            title={capitalize(traitType)}\r\n            traitType={traitType}\r\n            items={items}\r\n            collectionAddress={address}\r\n          />\r\n        )\r\n      })}\r\n      {!isEmpty(nftFilters) && <ClearAllButton collectionAddress={address} mb=\"4px\" />}\r\n    </ScrollableFlexContainer>\r\n  )\r\n}\r\n\r\nexport default Filters\r\n","import React, { useEffect, useState } from 'react'\r\nimport { AutoRenewIcon, Button, Flex, Grid } from '@pancakeswap/uikit'\r\nimport { useAppDispatch } from 'state'\r\nimport { useGetNftFilterLoadingState, useNftsFromCollection } from 'state/nftMarket/hooks'\r\nimport { Collection, NftFilterLoadingState } from 'state/nftMarket/types'\r\nimport { fetchNftsFromCollections } from 'state/nftMarket/reducer'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport GridPlaceholder from '../../components/GridPlaceholder'\r\nimport { CollectibleLinkCard } from '../../components/CollectibleCard'\r\nimport { REQUEST_SIZE } from '../config'\r\n\r\ninterface CollectionNftsProps {\r\n  collection: Collection\r\n}\r\n\r\nconst CollectionNfts: React.FC<CollectionNftsProps> = ({ collection }) => {\r\n  const { totalSupply, address: collectionAddress } = collection\r\n  const [page, setPage] = useState(1)\r\n  const { t } = useTranslation()\r\n  const collectionNfts = useNftsFromCollection(collectionAddress)\r\n  const nftFilterLoadingState = useGetNftFilterLoadingState()\r\n  const isFetching = nftFilterLoadingState === NftFilterLoadingState.LOADING\r\n  const dispatch = useAppDispatch()\r\n\r\n  const handleLoadMore = () => {\r\n    setPage((prevPage) => prevPage + 1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      fetchNftsFromCollections({\r\n        collectionAddress,\r\n        page,\r\n        size: REQUEST_SIZE,\r\n      }),\r\n    )\r\n  }, [page, collectionAddress, dispatch])\r\n\r\n  if (!collectionNfts || collectionNfts?.length === 0) {\r\n    return <GridPlaceholder numItems={REQUEST_SIZE} />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        gridGap=\"16px\"\r\n        gridTemplateColumns={['1fr', null, 'repeat(3, 1fr)', null, 'repeat(4, 1fr)']}\r\n        alignItems=\"start\"\r\n      >\r\n        {collectionNfts.map((nft) => {\r\n          const currentAskPriceAsNumber = nft.marketData && parseFloat(nft.marketData.currentAskPrice)\r\n\r\n          return (\r\n            <CollectibleLinkCard\r\n              key={nft.tokenId}\r\n              nft={nft}\r\n              currentAskPrice={currentAskPriceAsNumber > 0 ? currentAskPriceAsNumber : undefined}\r\n            />\r\n          )\r\n        })}\r\n      </Grid>\r\n      <Flex mt=\"60px\" mb=\"12px\" justifyContent=\"center\">\r\n        {collectionNfts?.length < Number(totalSupply) && (\r\n          <Button\r\n            onClick={handleLoadMore}\r\n            scale=\"sm\"\r\n            endIcon={isFetching ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\r\n          >\r\n            {isFetching ? t('Loading') : t('Load more')}\r\n          </Button>\r\n        )}\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CollectionNfts\r\n","import React, { useState } from 'react'\r\nimport { BunnyPlaceholderIcon, Button, Flex, Grid, Text } from '@pancakeswap/uikit'\r\nimport { useGetNftFilterLoadingState, useNftsFromCollection } from 'state/nftMarket/hooks'\r\nimport { Collection, NftFilterLoadingState } from 'state/nftMarket/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport GridPlaceholder from '../../components/GridPlaceholder'\r\nimport { CollectibleLinkCard } from '../../components/CollectibleCard'\r\nimport { REQUEST_SIZE } from '../config'\r\n\r\ninterface FilteredCollectionNftsProps {\r\n  collection: Collection\r\n}\r\n\r\nconst FilteredCollectionNfts: React.FC<FilteredCollectionNftsProps> = ({ collection }) => {\r\n  const { address: collectionAddress } = collection\r\n  const [numToShow, setNumToShow] = useState(REQUEST_SIZE)\r\n  const { t } = useTranslation()\r\n  const collectionNfts = useNftsFromCollection(collectionAddress)\r\n  const nftFilterLoadingState = useGetNftFilterLoadingState()\r\n\r\n  const handleLoadMore = () => {\r\n    setNumToShow((prevNumToShow) => prevNumToShow + REQUEST_SIZE)\r\n  }\r\n\r\n  if (nftFilterLoadingState === NftFilterLoadingState.LOADING) {\r\n    return <GridPlaceholder />\r\n  }\r\n\r\n  const nftsToShow = collectionNfts ? collectionNfts.slice(0, numToShow) : []\r\n\r\n  return (\r\n    <>\r\n      {nftsToShow.length > 0 ? (\r\n        <>\r\n          <Grid\r\n            gridGap=\"16px\"\r\n            gridTemplateColumns={['1fr', null, 'repeat(3, 1fr)', null, 'repeat(4, 1fr)']}\r\n            alignItems=\"start\"\r\n          >\r\n            {nftsToShow.map((nft) => {\r\n              const currentAskPriceAsNumber = nft.marketData && parseFloat(nft.marketData.currentAskPrice)\r\n\r\n              return (\r\n                <CollectibleLinkCard\r\n                  key={nft.tokenId}\r\n                  nft={nft}\r\n                  currentAskPrice={currentAskPriceAsNumber > 0 ? currentAskPriceAsNumber : undefined}\r\n                />\r\n              )\r\n            })}\r\n          </Grid>\r\n          <Flex mt=\"60px\" mb=\"12px\" justifyContent=\"center\">\r\n            {collectionNfts.length > numToShow && (\r\n              <Button onClick={handleLoadMore} scale=\"sm\">\r\n                {t('Load more')}\r\n              </Button>\r\n            )}\r\n          </Flex>\r\n        </>\r\n      ) : (\r\n        <Flex alignItems=\"center\" py=\"48px\" flexDirection=\"column\">\r\n          <BunnyPlaceholderIcon width=\"96px\" mb=\"24px\" />\r\n          <Text fontWeight={600}>{t('No NFTs found')}</Text>\r\n        </Flex>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FilteredCollectionNfts\r\n","import React from 'react'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport { Collection } from 'state/nftMarket/types'\r\nimport { useGetNftFilters } from 'state/nftMarket/hooks'\r\nimport Container from 'components/Layout/Container'\r\nimport Filters from './Filters'\r\nimport CollectionNfts from './CollectionNfts'\r\nimport FilteredCollectionNfts from './FilteredCollectionNfts'\r\n\r\ninterface CollectionWrapperProps {\r\n  collection: Collection\r\n}\r\n\r\nconst CollectionWrapper: React.FC<CollectionWrapperProps> = ({ collection }) => {\r\n  const nftFilters = useGetNftFilters()\r\n\r\n  return (\r\n    <Box py=\"32px\">\r\n      <Container px={[0, null, '24px']}>\r\n        <Filters collection={collection} />\r\n      </Container>\r\n      <Container>\r\n        {isEmpty(nftFilters) ? (\r\n          <CollectionNfts collection={collection} />\r\n        ) : (\r\n          <FilteredCollectionNfts collection={collection} />\r\n        )}\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default CollectionWrapper\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { Box, Flex, Text } from '@pancakeswap/uikit'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchCollection } from 'state/nftMarket/reducer'\r\nimport { useGetCollection } from 'state/nftMarket/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport Container from 'components/Layout/Container'\r\nimport { pancakeBunniesAddress } from '../../constants'\r\nimport PancakeBunniesCollectionNfts from './PancakeBunniesCollectionNfts'\r\nimport Header from '../Header'\r\nimport CollectionWrapper from './CollectionWrapper'\r\n\r\nconst Items = () => {\r\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\r\n  const [sortBy, setSortBy] = useState('updatedAt')\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const collection = useGetCollection(collectionAddress)\r\n  const isPBCollection = collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\r\n\r\n  const { address } = collection || {}\r\n\r\n  const sortByItems = [\r\n    { label: t('Recently listed'), value: 'updatedAt' },\r\n    { label: t('Lowest price'), value: 'currentAskPrice' },\r\n  ]\r\n\r\n  const handleChange = (newOption: OptionProps) => {\r\n    setSortBy(newOption.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (address) {\r\n      dispatch(fetchCollection(address))\r\n    }\r\n  }, [address, dispatch])\r\n\r\n  return (\r\n    <>\r\n      <Header collection={collection} />\r\n\r\n      {/* Only PBs can return enough data to viably sort the entire collection */}\r\n      {isPBCollection ? (\r\n        <Container mb=\"24px\">\r\n          <Flex alignItems=\"center\" justifyContent={['flex-start', null, null, 'flex-end']} mb=\"24px\">\r\n            <Box minWidth=\"165px\">\r\n              <Text fontSize=\"12px\" textTransform=\"uppercase\" color=\"textSubtle\" fontWeight={600} mb=\"4px\">\r\n                {t('Sort By')}\r\n              </Text>\r\n              <Select options={sortByItems} onOptionChange={handleChange} />\r\n            </Box>\r\n          </Flex>\r\n          <PancakeBunniesCollectionNfts collection={collection} sortBy={sortBy} />\r\n        </Container>\r\n      ) : (\r\n        <CollectionWrapper collection={collection} />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Items\r\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","import { useEffect, useState } from 'react'\r\nimport { getCollectionDistributionApi } from 'state/nftMarket/helpers'\r\nimport { ApiCollectionDistribution, ApiCollectionDistributionPB } from 'state/nftMarket/types'\r\nimport { pancakeBunniesAddress } from '../constants'\r\n\r\ninterface State {\r\n  isFetching: boolean\r\n  data: ApiCollectionDistribution['data']\r\n}\r\n\r\nconst useGetCollectionDistribution = (collectionAddress: string) => {\r\n  const [state, setState] = useState<State>({ isFetching: false, data: null })\r\n\r\n  useEffect(() => {\r\n    const fetchTokens = async () => {\r\n      setState((prevState) => ({ ...prevState, isFetching: true }))\r\n      const apiResponse = await getCollectionDistributionApi<ApiCollectionDistribution>(collectionAddress)\r\n      setState({\r\n        isFetching: false,\r\n        data: apiResponse.data,\r\n      })\r\n    }\r\n\r\n    fetchTokens()\r\n  }, [collectionAddress, setState])\r\n\r\n  return state\r\n}\r\n\r\ninterface StatePB {\r\n  isFetching: boolean\r\n  data: ApiCollectionDistributionPB['data']\r\n}\r\n\r\nexport const useGetCollectionDistributionPB = () => {\r\n  const [state, setState] = useState<StatePB>({ isFetching: false, data: null })\r\n\r\n  useEffect(() => {\r\n    const fetchTokens = async () => {\r\n      setState((prevState) => ({ ...prevState, isFetching: true }))\r\n      const apiResponse = await getCollectionDistributionApi<ApiCollectionDistributionPB>(pancakeBunniesAddress)\r\n      setState({\r\n        isFetching: false,\r\n        data: apiResponse.data,\r\n      })\r\n    }\r\n\r\n    fetchTokens()\r\n  }, [setState])\r\n\r\n  return state\r\n}\r\n\r\nexport default useGetCollectionDistribution\r\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","import { useState, useEffect } from 'react'\r\nimport {\r\n  getAllPancakeBunniesLowestPrice,\r\n  getAllPancakeBunniesRecentUpdatedAt,\r\n  getNftsFromCollectionApi,\r\n} from 'state/nftMarket/helpers'\r\nimport { NftToken } from 'state/nftMarket/types'\r\nimport { pancakeBunniesAddress } from '../constants'\r\n\r\n// If collection is PancakeBunnies - gets all available bunnies, otherwise - null\r\nconst useAllPancakeBunnyNfts = (collectionAddress: string) => {\r\n  const [allPancakeBunnyNfts, setAllPancakeBunnyNfts] = useState<NftToken[]>(null)\r\n\r\n  const isPBCollection = collectionAddress === pancakeBunniesAddress\r\n\r\n  useEffect(() => {\r\n    const fetchPancakeBunnies = async () => {\r\n      // In order to not define special TS type just for PancakeBunnies display we're hacking a little bit into NftToken type.\r\n      // On this page we just want to display all bunnies with their lowest prices and updates on the market\r\n      // Since some bunnies might not be on the market at all, we don't refer to the redux nfts state (which stores NftToken with actual token ids)\r\n      // We merely request from API all available bunny ids with their metadata and query subgraph for lowest price and latest updates.\r\n      const { data } = await getNftsFromCollectionApi(pancakeBunniesAddress)\r\n      const bunnyIds = Object.keys(data)\r\n      const lowestPrices = await getAllPancakeBunniesLowestPrice(bunnyIds)\r\n      const latestUpdates = await getAllPancakeBunniesRecentUpdatedAt(bunnyIds)\r\n      const allBunnies: NftToken[] = bunnyIds.map((bunnyId) => {\r\n        return {\r\n          // tokenId here is just a dummy one to satisfy TS. TokenID does not play any role in gird display below\r\n          tokenId: data[bunnyId].name,\r\n          name: data[bunnyId].name,\r\n          description: data[bunnyId].description,\r\n          collectionAddress: pancakeBunniesAddress,\r\n          collectionName: data[bunnyId].collection.name,\r\n          image: data[bunnyId].image,\r\n          attributes: [\r\n            {\r\n              traitType: 'bunnyId',\r\n              value: bunnyId,\r\n              displayType: null,\r\n            },\r\n          ],\r\n          meta: {\r\n            currentAskPrice: lowestPrices[bunnyId],\r\n            updatedAt: latestUpdates[bunnyId],\r\n          },\r\n        }\r\n      })\r\n      setAllPancakeBunnyNfts(allBunnies)\r\n    }\r\n    if (isPBCollection && !allPancakeBunnyNfts) {\r\n      fetchPancakeBunnies()\r\n    }\r\n  }, [isPBCollection, allPancakeBunnyNfts])\r\n\r\n  return allPancakeBunnyNfts\r\n}\r\n\r\nexport default useAllPancakeBunnyNfts\r\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n"],"sourceRoot":""}